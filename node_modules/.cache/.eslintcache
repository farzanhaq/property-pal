[{"/Users/farzanhaq/Desktop/PropertyPal/src/index.tsx":"1","/Users/farzanhaq/Desktop/PropertyPal/src/App.tsx":"2","/Users/farzanhaq/Desktop/PropertyPal/src/aws-exports.js":"3","/Users/farzanhaq/Desktop/PropertyPal/src/utils/BookingState.tsx":"4","/Users/farzanhaq/Desktop/PropertyPal/src/utils/AuthState.tsx":"5","/Users/farzanhaq/Desktop/PropertyPal/src/utils/FormState.tsx":"6","/Users/farzanhaq/Desktop/PropertyPal/src/components/Styles/Footer.style.tsx":"7","/Users/farzanhaq/Desktop/PropertyPal/src/components/index.tsx":"8","/Users/farzanhaq/Desktop/PropertyPal/src/utils/enums.ts":"9","/Users/farzanhaq/Desktop/PropertyPal/src/components/Navbar/Navbar.tsx":"10","/Users/farzanhaq/Desktop/PropertyPal/src/components/Home/Home.tsx":"11","/Users/farzanhaq/Desktop/PropertyPal/src/components/Screening/Screening.tsx":"12","/Users/farzanhaq/Desktop/PropertyPal/src/components/Results/Results.tsx":"13","/Users/farzanhaq/Desktop/PropertyPal/src/components/Booking/Booking.tsx":"14","/Users/farzanhaq/Desktop/PropertyPal/src/components/Results/Result/Result.tsx":"15","/Users/farzanhaq/Desktop/PropertyPal/src/components/Footerbar/Footerbar.tsx":"16","/Users/farzanhaq/Desktop/PropertyPal/src/components/Authentication/Login/Login.tsx":"17","/Users/farzanhaq/Desktop/PropertyPal/src/components/Authentication/SignUp/SignUp.tsx":"18","/Users/farzanhaq/Desktop/PropertyPal/src/components/Styles/Paragraph.style.tsx":"19","/Users/farzanhaq/Desktop/PropertyPal/src/components/Styles/Button.style.tsx":"20","/Users/farzanhaq/Desktop/PropertyPal/src/components/Styles/Row.style.tsx":"21","/Users/farzanhaq/Desktop/PropertyPal/src/components/Styles/Title.style.tsx":"22","/Users/farzanhaq/Desktop/PropertyPal/src/components/Styles/Div.style.tsx":"23","/Users/farzanhaq/Desktop/PropertyPal/src/components/Styles/LoadingOutlined.style.tsx":"24","/Users/farzanhaq/Desktop/PropertyPal/src/components/Booking/Contract/Contract.tsx":"25","/Users/farzanhaq/Desktop/PropertyPal/src/components/Booking/Payment/Payment.tsx":"26","/Users/farzanhaq/Desktop/PropertyPal/src/components/Booking/Identification/Identification.tsx":"27","/Users/farzanhaq/Desktop/PropertyPal/src/components/Screening/Budget/Budget.tsx":"28","/Users/farzanhaq/Desktop/PropertyPal/src/components/Screening/Confirmation/Confirmation.tsx":"29","/Users/farzanhaq/Desktop/PropertyPal/src/components/Screening/Premiums/Premiums.tsx":"30","/Users/farzanhaq/Desktop/PropertyPal/src/components/Screening/UnitType/UnitType.tsx":"31","/Users/farzanhaq/Desktop/PropertyPal/src/components/Screening/BuyerExperience/BuyerExperience.tsx":"32","/Users/farzanhaq/Desktop/PropertyPal/src/components/Screening/BuyerPurpose/BuyerPurpose.tsx":"33","/Users/farzanhaq/Desktop/PropertyPal/src/components/Home/Booking/Booking.tsx":"34","/Users/farzanhaq/Desktop/PropertyPal/src/components/Home/Result/Result.tsx":"35","/Users/farzanhaq/Desktop/PropertyPal/src/components/Home/Hero/Hero.tsx":"36","/Users/farzanhaq/Desktop/PropertyPal/src/components/Home/Results/Results.tsx":"37","/Users/farzanhaq/Desktop/PropertyPal/src/graphql/mutations.ts":"38","/Users/farzanhaq/Desktop/PropertyPal/src/components/Styles/Typography.style.tsx":"39","/Users/farzanhaq/Desktop/PropertyPal/src/components/Styles/Image.style.tsx":"40","/Users/farzanhaq/Desktop/PropertyPal/src/components/Styles/Upload.style.tsx":"41","/Users/farzanhaq/Desktop/PropertyPal/src/components/Styles/Select.style.tsx":"42","/Users/farzanhaq/Desktop/PropertyPal/src/components/Styles/Meta.style.tsx":"43","/Users/farzanhaq/Desktop/PropertyPal/src/components/Styles/Card.style.tsx":"44","/Users/farzanhaq/Desktop/PropertyPal/src/components/Styles/Col.style.tsx":"45","/Users/farzanhaq/Desktop/PropertyPal/src/components/Styles/Link.style.tsx":"46","/Users/farzanhaq/Desktop/PropertyPal/src/components/Authentication/Verification/Verification.tsx":"47","/Users/farzanhaq/Desktop/PropertyPal/src/components/Styles/Form.style.tsx":"48","/Users/farzanhaq/Desktop/PropertyPal/src/components/Routes/Routes.tsx":"49","/Users/farzanhaq/Desktop/PropertyPal/src/components/Routes/PrivateRoute.tsx":"50","/Users/farzanhaq/Desktop/PropertyPal/src/graphql/queries.ts":"51","/Users/farzanhaq/Desktop/PropertyPal/src/components/Authentication/Reset/Reset.tsx":"52","/Users/farzanhaq/Desktop/PropertyPal/src/components/Styles/Anchor.style.tsx":"53","/Users/farzanhaq/Desktop/PropertyPal/src/components/Booking/Payment/PaymentButton.tsx":"54","/Users/farzanhaq/Desktop/PropertyPal/src/components/Styles/Text.style.tsx":"55","/Users/farzanhaq/Desktop/PropertyPal/src/components/Booking/Success/Success.tsx":"56"},{"size":238,"mtime":1636324952471,"results":"57","hashOfConfig":"58"},{"size":1084,"mtime":1639093344091,"results":"59","hashOfConfig":"58"},{"size":1699,"mtime":1639769766655,"results":"60","hashOfConfig":"58"},{"size":563,"mtime":1636325056106,"results":"61","hashOfConfig":"58"},{"size":528,"mtime":1636570397676,"results":"62","hashOfConfig":"58"},{"size":2326,"mtime":1636325056106,"results":"63","hashOfConfig":"58"},{"size":176,"mtime":1636325056035,"results":"64","hashOfConfig":"58"},{"size":595,"mtime":1639609974280,"results":"65","hashOfConfig":"58"},{"size":1423,"mtime":1636325056107,"results":"66","hashOfConfig":"58"},{"size":1235,"mtime":1639159151794,"results":"67","hashOfConfig":"58"},{"size":383,"mtime":1638894215625,"results":"68","hashOfConfig":"58"},{"size":2484,"mtime":1639625645640,"results":"69","hashOfConfig":"58"},{"size":9812,"mtime":1639159174936,"results":"70","hashOfConfig":"58"},{"size":2087,"mtime":1639700613995,"results":"71","hashOfConfig":"58"},{"size":12426,"mtime":1639700498722,"results":"72","hashOfConfig":"58"},{"size":205,"mtime":1638894426242,"results":"73","hashOfConfig":"58"},{"size":3245,"mtime":1639671830479,"results":"74","hashOfConfig":"58"},{"size":6429,"mtime":1639159141336,"results":"75","hashOfConfig":"58"},{"size":328,"mtime":1636325056036,"results":"76","hashOfConfig":"58"},{"size":314,"mtime":1636595613306,"results":"77","hashOfConfig":"58"},{"size":416,"mtime":1636325056037,"results":"78","hashOfConfig":"58"},{"size":432,"mtime":1636325056037,"results":"79","hashOfConfig":"58"},{"size":1261,"mtime":1637786225801,"results":"80","hashOfConfig":"58"},{"size":174,"mtime":1636325056036,"results":"81","hashOfConfig":"58"},{"size":1350,"mtime":1639674518298,"results":"82","hashOfConfig":"58"},{"size":1163,"mtime":1639700650140,"results":"83","hashOfConfig":"58"},{"size":4426,"mtime":1639710176267,"results":"84","hashOfConfig":"58"},{"size":2115,"mtime":1639108140060,"results":"85","hashOfConfig":"58"},{"size":5603,"mtime":1639603054079,"results":"86","hashOfConfig":"58"},{"size":2104,"mtime":1639108119069,"results":"87","hashOfConfig":"58"},{"size":2934,"mtime":1639108096788,"results":"88","hashOfConfig":"58"},{"size":2798,"mtime":1638894696918,"results":"89","hashOfConfig":"58"},{"size":2864,"mtime":1639108081109,"results":"90","hashOfConfig":"58"},{"size":1207,"mtime":1638894260621,"results":"91","hashOfConfig":"58"},{"size":1174,"mtime":1638894327559,"results":"92","hashOfConfig":"58"},{"size":1847,"mtime":1639092434317,"results":"93","hashOfConfig":"58"},{"size":1197,"mtime":1638894291264,"results":"94","hashOfConfig":"58"},{"size":5741,"mtime":1639769706749,"results":"95","hashOfConfig":"58"},{"size":255,"mtime":1637788115667,"results":"96","hashOfConfig":"58"},{"size":182,"mtime":1636325056036,"results":"97","hashOfConfig":"58"},{"size":179,"mtime":1636325056038,"results":"98","hashOfConfig":"58"},{"size":232,"mtime":1636325056037,"results":"99","hashOfConfig":"58"},{"size":159,"mtime":1637982754550,"results":"100","hashOfConfig":"58"},{"size":278,"mtime":1637982906697,"results":"101","hashOfConfig":"58"},{"size":293,"mtime":1636325056034,"results":"102","hashOfConfig":"58"},{"size":220,"mtime":1637290493546,"results":"103","hashOfConfig":"58"},{"size":2740,"mtime":1639158668824,"results":"104","hashOfConfig":"58"},{"size":163,"mtime":1636595750427,"results":"105","hashOfConfig":"58"},{"size":980,"mtime":1639672666674,"results":"106","hashOfConfig":"58"},{"size":706,"mtime":1636936074723,"results":"107","hashOfConfig":"58"},{"size":5187,"mtime":1639769706547,"results":"108","hashOfConfig":"58"},{"size":4277,"mtime":1639159136234,"results":"109","hashOfConfig":"58"},{"size":107,"mtime":1637290467448,"results":"110","hashOfConfig":"58"},{"size":1499,"mtime":1639700679876,"results":"111","hashOfConfig":"58"},{"size":193,"mtime":1639602618975,"results":"112","hashOfConfig":"58"},{"size":615,"mtime":1639682978010,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"adxjcl",{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"116"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"116"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"116"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"/Users/farzanhaq/Desktop/PropertyPal/src/index.tsx",[],["230","231"],"/Users/farzanhaq/Desktop/PropertyPal/src/App.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/aws-exports.js",[],"/Users/farzanhaq/Desktop/PropertyPal/src/utils/BookingState.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/utils/AuthState.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/utils/FormState.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/Styles/Footer.style.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/index.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/utils/enums.ts",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/Navbar/Navbar.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/Home/Home.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/Screening/Screening.tsx",["232"],"import { Col, Divider, Row, Spin, Steps, Typography } from \"antd\";\nimport { useContext, useEffect } from \"react\";\nimport { ScreeningKind } from \"../../utils/enums\";\nimport { FormStatusContext } from \"../../utils/FormState\";\nimport { StyledDiv } from \"../Styles/Div.style\";\nimport { StyledLoadingIcon } from \"../Styles/LoadingOutlined.style\";\nimport { StyledSubtitle, StyledTitle } from \"../Styles/Title.style\";\nimport Budget from \"./Budget/Budget\";\nimport BuyerExperience from \"./BuyerExperience/BuyerExperience\";\nimport BuyerPurpose from \"./BuyerPurpose/BuyerPurpose\";\nimport Confirmation from \"./Confirmation/Confirmation\";\nimport Premiums from \"./Premiums/Premiums\";\nimport UnitType from \"./UnitType/UnitType\";\n\nconst { Step } = Steps;\n\nconst Screening = () => {\n  const { currentStep, setCurrentStep } = useContext(FormStatusContext);\n  let formData: JSX.Element;\n\n  useEffect(() => {\n    return () => {\n      setCurrentStep(0);\n    };\n  }, []);\n\n  switch (currentStep) {\n    case ScreeningKind.BUYER_EXPERIENCE:\n      formData = <BuyerExperience />;\n      break;\n    case ScreeningKind.BUYER_PURPOSE:\n      formData = <BuyerPurpose />;\n      break;\n    case ScreeningKind.UNIT_TYPE:\n      formData = <UnitType />;\n      break;\n    case ScreeningKind.PREMIUMS:\n      formData = <Premiums />;\n      break;\n    case ScreeningKind.BUDGET:\n      formData = <Budget />;\n      break;\n    case ScreeningKind.CONFIRMATION:\n      formData = <Confirmation />;\n      break;\n    default:\n      formData = <Spin indicator={<StyledLoadingIcon spin />} />;\n  }\n\n  return (\n    <StyledDiv>\n      <Typography>\n        <StyledTitle level={2}>Help Us, Help You</StyledTitle>\n        <StyledSubtitle level={5} type=\"secondary\">\n          We need you to answer a few questions so we can provide you with some\n          recommendations\n        </StyledSubtitle>\n      </Typography>\n      <Divider />\n      <Row align=\"middle\" justify=\"center\">\n        <Col span={4}>\n          <Steps current={currentStep} direction=\"vertical\">\n            <Step title=\"Experience\" />\n            <Step title=\"Purpose\" />\n            <Step title=\"Unit\" />\n            <Step title=\"Premiums\" />\n            <Step title=\"Budget\" />\n            <Step title=\"Confirmation\" />\n          </Steps>\n        </Col>\n        <Col span={18}>\n          <Row align=\"middle\" justify=\"center\">\n            <Col span={20}>{formData}</Col>\n          </Row>\n        </Col>\n      </Row>\n    </StyledDiv>\n  );\n};\n\nexport default Screening;\n","/Users/farzanhaq/Desktop/PropertyPal/src/components/Results/Results.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/Booking/Booking.tsx",["233"],"import { Col, Divider, Row, Spin, Steps } from \"antd\";\nimport { useContext, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { BookingStatusContext } from \"../../utils/BookingState\";\nimport { BookingKind } from \"../../utils/enums\";\nimport { StyledDiv } from \"../Styles/Div.style\";\nimport { StyledLoadingIcon } from \"../Styles/LoadingOutlined.style\";\nimport { StyledSubtitle, StyledTitle } from \"../Styles/Title.style\";\nimport Contract from \"./Contract/Contract\";\nimport Identification from \"./Identification/Identification\";\nimport Payment from \"./Payment/Payment\";\n\nconst { Step } = Steps;\n\nconst loadingIcon = <StyledLoadingIcon spin />;\n\ninterface bookingProps {\n  id: string;\n  total: string;\n}\n\nconst Booking = () => {\n  const { currentStep, setCurrentStep } = useContext(BookingStatusContext);\n  let unitData = useLocation();\n  let formData: JSX.Element;\n  const unit: bookingProps = unitData.state as any;\n\n  useEffect(() => {\n    return () => {\n      setCurrentStep(0);\n    };\n  }, []);\n\n  switch (currentStep) {\n    case BookingKind.IDENTIFICATION:\n      formData = <Identification />;\n      break;\n    case BookingKind.CONTRACT:\n      formData = <Contract />;\n      break;\n    case BookingKind.PAYMENT:\n      formData = <Payment id={unit.id} total={unit.total} />;\n      break;\n    default:\n      formData = <Spin indicator={loadingIcon} />;\n  }\n\n  return (\n    <StyledDiv>\n      <StyledTitle level={2}>Booking</StyledTitle>\n      <StyledSubtitle level={5} type=\"secondary\">\n        Complete your purchase with us\n      </StyledSubtitle>\n      <Divider />\n      <Row align=\"middle\" justify=\"center\">\n        <Col span={4}>\n          <Steps current={currentStep} direction=\"vertical\">\n            <Step title=\"Identification\" />\n            <Step title=\"Legal\" />\n            <Step title=\"Payment\" />\n          </Steps>\n        </Col>\n        <Col span={18}>\n          <Row align=\"middle\" justify=\"center\">\n            <Col span={20}>{formData}</Col>\n          </Row>\n        </Col>\n      </Row>\n    </StyledDiv>\n  );\n};\n\nexport default Booking;\n","/Users/farzanhaq/Desktop/PropertyPal/src/components/Results/Result/Result.tsx",["234","235"],"import { ArrowRightOutlined } from \"@ant-design/icons\";\nimport { S3ProviderListOutput } from \"@aws-amplify/storage\";\nimport {\n  Card,\n  Col,\n  Divider,\n  Image,\n  message,\n  Row,\n  Spin,\n  Statistic,\n  Tabs,\n  Typography\n} from \"antd\";\nimport { API, Storage } from \"aws-amplify\";\nimport { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { listUnits } from \"../../../graphql/queries\";\nimport { StyledResultBookButton } from \"../../Styles/Button.style\";\nimport {\n  StyledDiv,\n  StyledLoadingDiv,\n  StyledResultBookDiv,\n  StyledResultFeesDiv,\n  StyledResultGalleryDiv\n} from \"../../Styles/Div.style\";\nimport { StyledLoadingIcon } from \"../../Styles/LoadingOutlined.style\";\nimport { StyledResultParagraph } from \"../../Styles/Paragraph.style\";\nimport { StyledResultFeesRow } from \"../../Styles/Row.style\";\nimport { StyledTitle } from \"../../Styles/Title.style\";\n\nconst { TabPane } = Tabs;\nconst { PreviewGroup } = Image;\n\ninterface Unit {\n  collection: string;\n  unit_number: number;\n  starting_floor: number;\n  price: string;\n  square_ft: number;\n  beds: number;\n  baths: number;\n  occupancy_date: number;\n}\n\ninterface UnitHeaders {\n  unit_number: number;\n  price: string;\n  square_ft: number;\n  beds: number;\n  baths: number;\n  occupancy_date: number;\n}\n\nconst loadingIcon: JSX.Element = <StyledLoadingIcon spin />;\n\nconst Result = () => {\n  const [unit, setUnit] = useState<Unit>();\n  const [unitHeaders, setUnitHeaders] = useState<UnitHeaders>();\n  const [renderingsImageLinks, setRenderingsImageLinks] = useState<string[]>([\n    \"\",\n  ]);\n  const [viewsImageLinks, setViewsImageLinks] = useState<string[]>([\"\"]);\n  const [neighbourhoodImageLinks, setNeighbourhoodImageLinks] = useState<\n    string[]\n  >([\"\"]);\n  const [floorplanImageLinks, setFloorplanImageLinks] = useState<string[]>([\n    \"\",\n  ]);\n  const { id } = useParams<{ id: string }>();\n\n  useEffect(() => {\n    getUnit();\n  }, []);\n\n  useEffect(() => {\n    getRenderingImages();\n    getViewsImages();\n    getNeighbourhoodImages();\n    getFloorplanImages();\n  }, [unit]);\n\n  const getUnit = async () => {\n    try {\n      const filter: {\n        id: {\n          eq: string;\n        };\n      } = {\n        id: {\n          eq: id,\n        },\n      };\n\n      const selectedUnit: any = await API.graphql({\n        query: listUnits,\n        variables: { filter: filter },\n      });\n\n      const {\n        collection,\n        unit_number,\n        starting_floor,\n        price,\n        square_ft,\n        beds,\n        baths,\n        occupancy_date,\n      }: {\n        collection: string;\n        unit_number: number;\n        starting_floor: number;\n        price: string;\n        square_ft: number;\n        beds: number;\n        baths: number;\n        occupancy_date: number;\n      } = selectedUnit.data.listUnits.items[0];\n\n      const selectedUnitObj: Unit = {\n        collection: collection,\n        unit_number: unit_number,\n        starting_floor: starting_floor,\n        price: price,\n        square_ft: square_ft,\n        beds: beds,\n        baths: baths,\n        occupancy_date: occupancy_date,\n      };\n\n      setUnit(selectedUnitObj);\n\n      const selectedUnitHeaders: UnitHeaders = {\n        unit_number: unit_number,\n        price: price,\n        square_ft: square_ft,\n        beds: beds,\n        baths: baths,\n        occupancy_date: occupancy_date,\n      };\n\n      setUnitHeaders(selectedUnitHeaders);\n    } catch (err) {\n      message.error(\"There was an error retrieving the unit.\");\n      console.log(err);\n    }\n  };\n\n  const getRenderingImages = async () => {\n    try {\n      const renderingsImages: S3ProviderListOutput = await Storage.list(\n        \"renderings/\"\n      );\n      const renderingsImagesKeys: (string | undefined)[] = renderingsImages\n        .slice(1, renderingsImages.length)\n        .map((image) => {\n          return image.key;\n        });\n\n      const renderingsImageLinks: string[] = [\"\"];\n\n      for (const imageKey of renderingsImagesKeys) {\n        if (imageKey) {\n          const fileAccessURL: string = await Storage.get(imageKey);\n\n          renderingsImageLinks.push(fileAccessURL);\n        }\n      }\n\n      setRenderingsImageLinks(renderingsImageLinks);\n    } catch (err) {\n      message.error(\"There was an error retrieving the rendering images.\");\n      console.log(err);\n    }\n  };\n\n  const getViewsImages = async () => {\n    try {\n      const viewsImages: S3ProviderListOutput = await Storage.list(\n        `views/${unit?.starting_floor}/`\n      );\n\n      const viewsImagesKeys: (string | undefined)[] = viewsImages\n        .slice(1, viewsImages.length)\n        .map((image) => {\n          return image.key;\n        });\n\n      const viewsImageLinks: string[] = [\"\"];\n\n      for (const imageKey of viewsImagesKeys) {\n        if (imageKey) {\n          const fileAccessURL: string = await Storage.get(imageKey);\n\n          viewsImageLinks.push(fileAccessURL);\n        }\n      }\n\n      setViewsImageLinks(viewsImageLinks);\n    } catch (err) {\n      message.error(\"There was an error retrieving the views images.\");\n      console.log(err);\n    }\n  };\n\n  const getNeighbourhoodImages = async () => {\n    try {\n      const neighbourhoodImages: S3ProviderListOutput = await Storage.list(\n        \"neighbourhood/\"\n      );\n      const neighbourhoodImagesKeys: (string | undefined)[] =\n        neighbourhoodImages\n          .slice(1, neighbourhoodImages.length)\n          .map((image) => {\n            return image.key;\n          });\n\n      const neighbourhoodImageLinks: string[] = [\"\"];\n\n      for (const imageKey of neighbourhoodImagesKeys) {\n        if (imageKey) {\n          const fileAccessURL: string = await Storage.get(imageKey);\n\n          neighbourhoodImageLinks.push(fileAccessURL);\n        }\n      }\n\n      setNeighbourhoodImageLinks(neighbourhoodImageLinks);\n    } catch (err) {\n      message.error(\"There was an error retrieving the neighbourhood images.\");\n      console.log(err);\n    }\n  };\n\n  const getFloorplanImages = async () => {\n    try {\n      const floorplanImages: S3ProviderListOutput = await Storage.list(\n        `floorplans/${getCollection()}/`\n      );\n\n      const floorplanImagesKeys: (string | undefined)[] = floorplanImages\n        .slice(1, floorplanImages.length)\n        .map((image) => {\n          return image.key;\n        });\n\n      const floorplanImageLinks: string[] = [\"\"];\n\n      for (const imageKey of floorplanImagesKeys) {\n        if (imageKey) {\n          const fileAccessURL: string = await Storage.get(imageKey);\n\n          floorplanImageLinks.push(fileAccessURL);\n        }\n      }\n\n      setFloorplanImageLinks(floorplanImageLinks);\n    } catch (err) {\n      message.error(\"There was an error retrieving the floorplan images.\");\n      console.log(err);\n    }\n  };\n\n  const getCollection = () => {\n    const collection =\n      unit?.starting_floor &&\n      unit?.starting_floor >= 9 &&\n      unit?.starting_floor <= 23\n        ? \"Cielo\"\n        : \"Stratus\";\n\n    return collection;\n  };\n\n  const imagePaneData = [\n    {\n      tabName: \"Renderings\",\n      images: renderingsImageLinks,\n      index: \"2\",\n    },\n    {\n      tabName: \"Views\",\n      images: viewsImageLinks,\n      index: \"3\",\n    },\n    {\n      tabName: \"Neighbourhood\",\n      images: neighbourhoodImageLinks,\n      index: \"4\",\n    },\n    {\n      tabName: \"Floorplan\",\n      images: floorplanImageLinks,\n      index: \"5\",\n    },\n  ];\n\n  const getHeaderName = (key: string) => {\n    if (key === \"unit_number\") {\n      return \"Unit\";\n    } else if (key === \"price\") {\n      return \"Price\";\n    } else if (key === \"square_ft\") {\n      return \"Square Foot\";\n    } else if (key === \"beds\") {\n      return \"Beds\";\n    } else if (key === \"baths\") {\n      return \"Baths\";\n    } else if (key === \"occupancy_date\") {\n      return \"Occupancy Date\";\n    }\n\n    return null;\n  };\n\n  const getHeaderValue = (key: string) => {\n    if (unitHeaders) {\n      if (key === \"price\") {\n        return `$${unitHeaders[\"price\"]}`;\n      } else {\n        return unitHeaders[key as keyof UnitHeaders];\n      }\n    }\n\n    return null;\n  };\n\n  return (\n    <StyledDiv>\n      {unit && unitHeaders ? (\n        <>\n          <Typography>\n            <StyledTitle level={2}>{getCollection()} Collection</StyledTitle>\n            <br />\n            <Row>\n              {Object.keys(unitHeaders).map((key: string) => (\n                <Col span={4}>\n                  <StyledResultParagraph type=\"secondary\">\n                    {getHeaderName(key)}\n                  </StyledResultParagraph>\n                  <StyledResultParagraph type=\"secondary\">\n                    {getHeaderValue(key)}\n                  </StyledResultParagraph>\n                </Col>\n              ))}\n            </Row>\n          </Typography>\n          <Divider />\n          <StyledResultBookDiv>\n            <StyledResultBookButton type=\"primary\" size=\"large\">\n              <Link\n                to={{\n                  pathname: \"/booking\",\n                  state: { id: id, total: unit?.price },\n                }}\n              >\n                Book Now <ArrowRightOutlined />\n              </Link>\n            </StyledResultBookButton>\n          </StyledResultBookDiv>\n          <br />\n          <Tabs tabPosition=\"left\">\n            <TabPane tab=\"Costs\" key=\"1\">\n              <StyledResultFeesDiv>\n                <StyledResultFeesRow gutter={16}>\n                  <Col span={12}>\n                    <Card>\n                      <Statistic\n                        title=\"Estimated Mortage\"\n                        value={500000}\n                        prefix=\"$\"\n                      />\n                      <Divider />\n                      <Typography>\n                        {\" \"}\n                        20% down payment <br /> 25 year amortization <br />{\" \"}\n                        1.75% interest\n                      </Typography>\n                    </Card>\n                  </Col>\n                  <Col span={12}>\n                    <Card>\n                      <Statistic\n                        title=\"Maintenance Fees\"\n                        value={1000}\n                        prefix=\"$\"\n                      />\n                      <Divider />\n                      <Typography>\n                        {\" \"}\n                        Min: $0.30/ft <br /> Avg: $0.40/ft <br /> Max: $0.50/ft{\" \"}\n                      </Typography>\n                    </Card>\n                  </Col>\n                </StyledResultFeesRow>\n                <Row gutter={16}>\n                  <Col span={12}>\n                    <Card>\n                      <Statistic title=\"Utility Fees\" value={500} prefix=\"$\" />\n                      <Divider />\n                      <Typography>\n                        {\" \"}\n                        Electricity: $200 <br /> Water: $200 <br /> Internet:\n                        $100{\" \"}\n                      </Typography>\n                    </Card>\n                  </Col>\n                  <Col span={12}>\n                    <Card>\n                      <Statistic title=\"Taxes\" value={750} prefix=\"$\" />\n                      <Divider />\n                      <Typography>\n                        {\" \"}\n                        GST: $300 <br /> HST: $200 <br /> PST: $250{\" \"}\n                      </Typography>\n                    </Card>\n                  </Col>\n                </Row>\n              </StyledResultFeesDiv>\n            </TabPane>\n            {imagePaneData.map((pane, index) => {\n              return (\n                <TabPane\n                  tab={imagePaneData[index].tabName}\n                  key={imagePaneData[index].index}\n                >\n                  <StyledResultGalleryDiv>\n                    <PreviewGroup>\n                      {imagePaneData[index].images.map(\n                        (image: string, idx: number) => {\n                          return (\n                            <div>\n                              <Image key={idx} src={image} />\n                            </div>\n                          );\n                        }\n                      )}\n                    </PreviewGroup>\n                  </StyledResultGalleryDiv>\n                </TabPane>\n              );\n            })}\n          </Tabs>\n        </>\n      ) : (\n        <StyledLoadingDiv>\n          <Spin indicator={loadingIcon} size=\"large\" />\n        </StyledLoadingDiv>\n      )}\n    </StyledDiv>\n  );\n};\n\nexport default Result;\n","/Users/farzanhaq/Desktop/PropertyPal/src/components/Footerbar/Footerbar.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/Authentication/Login/Login.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/Authentication/SignUp/SignUp.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/Styles/Paragraph.style.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/Styles/Button.style.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/Styles/Row.style.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/Styles/Title.style.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/Styles/Div.style.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/Styles/LoadingOutlined.style.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/Booking/Contract/Contract.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/Booking/Payment/Payment.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/Booking/Identification/Identification.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/Screening/Budget/Budget.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/Screening/Confirmation/Confirmation.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/Screening/Premiums/Premiums.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/Screening/UnitType/UnitType.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/Screening/BuyerExperience/BuyerExperience.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/Screening/BuyerPurpose/BuyerPurpose.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/Home/Booking/Booking.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/Home/Result/Result.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/Home/Hero/Hero.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/Home/Results/Results.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/graphql/mutations.ts",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/Styles/Typography.style.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/Styles/Image.style.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/Styles/Upload.style.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/Styles/Select.style.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/Styles/Meta.style.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/Styles/Card.style.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/Styles/Col.style.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/Styles/Link.style.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/Authentication/Verification/Verification.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/Styles/Form.style.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/Routes/Routes.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/Routes/PrivateRoute.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/graphql/queries.ts",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/Authentication/Reset/Reset.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/Styles/Anchor.style.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/Booking/Payment/PaymentButton.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/Styles/Text.style.tsx",[],"/Users/farzanhaq/Desktop/PropertyPal/src/components/Booking/Success/Success.tsx",[],{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","severity":1,"message":"241","line":25,"column":6,"nodeType":"242","endLine":25,"endColumn":8,"suggestions":"243"},{"ruleId":"240","severity":1,"message":"241","line":32,"column":6,"nodeType":"242","endLine":32,"endColumn":8,"suggestions":"244"},{"ruleId":"240","severity":1,"message":"245","line":74,"column":6,"nodeType":"242","endLine":74,"endColumn":8,"suggestions":"246"},{"ruleId":"240","severity":1,"message":"247","line":81,"column":6,"nodeType":"242","endLine":81,"endColumn":12,"suggestions":"248"},"no-native-reassign",["249"],"no-negated-in-lhs",["250"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setCurrentStep'. Either include it or remove the dependency array.","ArrayExpression",["251"],["252"],"React Hook useEffect has a missing dependency: 'getUnit'. Either include it or remove the dependency array.",["253"],"React Hook useEffect has missing dependencies: 'getFloorplanImages' and 'getViewsImages'. Either include them or remove the dependency array.",["254"],"no-global-assign","no-unsafe-negation",{"desc":"255","fix":"256"},{"desc":"255","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},"Update the dependencies array to be: [setCurrentStep]",{"range":"262","text":"263"},{"range":"264","text":"263"},"Update the dependencies array to be: [getUnit]",{"range":"265","text":"266"},"Update the dependencies array to be: [getFloorplanImages, getViewsImages, unit]",{"range":"267","text":"268"},[945,947],"[setCurrentStep]",[1022,1024],[1937,1939],"[getUnit]",[2072,2078],"[getFloorplanImages, getViewsImages, unit]"]