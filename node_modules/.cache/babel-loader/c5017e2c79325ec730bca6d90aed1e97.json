{"ast":null,"code":"var _jsxFileName = \"/Users/farzanhaq/Desktop/PropertyPal/src/components/Results/Result/Result.tsx\",\n    _s = $RefreshSig$();\n\nimport { Divider, Typography, Tabs, Row, Col, Statistic, Card, Image, Spin } from \"antd\";\nimport unitMedia1 from \"../../../images/unitMedia1.jpeg\";\nimport unitMedia2 from \"../../../images/unitMedia2.jpeg\";\nimport unitMedia3 from \"../../../images/unitMedia3.jpeg\";\nimport unitMedia4 from \"../../../images/unitMedia4.jpeg\";\nimport viewsMedia1 from \"../../../images/viewsMedia1.jpeg\";\nimport viewsMedia2 from \"../../../images/viewsMedia2.jpeg\";\nimport viewsMedia3 from \"../../../images/viewsMedia3.jpeg\";\nimport viewsMedia4 from \"../../../images/viewsMedia4.jpeg\";\nimport neighbourhoodMedia1 from \"../../../images/neighbourhoodMedia1.jpeg\";\nimport neighbourhoodMedia2 from \"../../../images/neighbourhoodMedia2.jpeg\";\nimport neighbourhoodMedia3 from \"../../../images/neighbourhoodMedia3.jpeg\";\nimport floorplanMedia1 from \"../../../images/floorplanMedia1.png\";\nimport floorplanMedia2 from \"../../../images/floorplanMedia2.png\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { StyledDiv, StyledLoadingDiv, StyledResultBookDiv, StyledResultFeesDiv, StyledResultGalleryDiv } from \"../../Styles/Div.style\";\nimport { StyledTitle } from \"../../Styles/Title.style\";\nimport { StyledResultParagraph } from \"../../Styles/Paragraph.style\";\nimport { StyledResultFeesRow } from \"../../Styles/Row.style\";\nimport { StyledResultBookButton } from \"../../Styles/Button.style\";\nimport { ArrowRightOutlined } from \"@ant-design/icons\";\nimport { useEffect, useState } from \"react\";\nimport { API } from \"aws-amplify\";\nimport { listUnits } from \"../../../graphql/queries\";\nimport { StyledLoadingIcon } from \"../../Styles/LoadingOutlined.style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  TabPane\n} = Tabs;\nconst {\n  PreviewGroup\n} = Image;\nconst unitImages = [unitMedia1, unitMedia2, unitMedia3, unitMedia4];\nconst viewsImages = [viewsMedia1, viewsMedia2, viewsMedia3, viewsMedia4];\nconst neighbourHoodImages = [neighbourhoodMedia1, neighbourhoodMedia2, neighbourhoodMedia3];\nconst floorplanImages = [floorplanMedia1, floorplanMedia2];\n\nconst loadingIcon = /*#__PURE__*/_jsxDEV(StyledLoadingIcon, {\n  spin: true\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 64,\n  columnNumber: 21\n}, this);\n\nconst Result = () => {\n  _s();\n\n  const [unit, setUnit] = useState();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    getUnit();\n  }, []);\n\n  const getUnit = async () => {\n    try {\n      const filter = {\n        id: {\n          eq: id\n        }\n      };\n      const selectedUnit = await API.graphql({\n        query: listUnits,\n        variables: {\n          filter: filter\n        }\n      });\n      const {\n        unit_number,\n        price,\n        square_ft,\n        beds,\n        baths,\n        occupancy_date\n      } = selectedUnit.data.listUnits.items[0];\n      const selectedUnitObj = {\n        unit_number: unit_number,\n        price: price,\n        square_ft: square_ft,\n        beds: beds,\n        baths: baths,\n        occupancy_date: occupancy_date\n      };\n      console.log(selectedUnitObj);\n      setUnit(selectedUnitObj);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const imagePaneData = [{\n    tabName: \"Renderings\",\n    images: unitImages,\n    index: \"2\"\n  }, {\n    tabName: \"Views\",\n    images: viewsImages,\n    index: \"3\"\n  }, {\n    tabName: \"Neighbourhood\",\n    images: neighbourHoodImages,\n    index: \"4\"\n  }, {\n    tabName: \"Floorplan\",\n    images: floorplanImages,\n    index: \"5\"\n  }];\n  return /*#__PURE__*/_jsxDEV(StyledDiv, {\n    children: unit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        children: [/*#__PURE__*/_jsxDEV(StyledTitle, {\n          level: 2,\n          children: [\"Unit \", unit.unit_number]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: Object.keys(unit).map(key => /*#__PURE__*/_jsxDEV(Col, {\n            span: 4,\n            children: /*#__PURE__*/_jsxDEV(StyledResultParagraph, {\n              type: \"secondary\",\n              children: unit[key]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledResultBookDiv, {\n        children: /*#__PURE__*/_jsxDEV(StyledResultBookButton, {\n          type: \"primary\",\n          size: \"large\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/booking\",\n            children: [\"Book Now \", /*#__PURE__*/_jsxDEV(ArrowRightOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n        tabPosition: \"left\",\n        children: [/*#__PURE__*/_jsxDEV(TabPane, {\n          tab: \"Costs\",\n          children: /*#__PURE__*/_jsxDEV(StyledResultFeesDiv, {\n            children: [/*#__PURE__*/_jsxDEV(StyledResultFeesRow, {\n              gutter: 16,\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                span: 12,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  children: [/*#__PURE__*/_jsxDEV(Statistic, {\n                    title: \"Estimated Mortage\",\n                    value: 500000,\n                    prefix: \"$\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    children: [\" \", \"20% down payment \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 169,\n                      columnNumber: 42\n                    }, this), \" 25 year amortization \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 169,\n                      columnNumber: 70\n                    }, this), \" \", \"1.75% interest\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                span: 12,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  children: [/*#__PURE__*/_jsxDEV(Statistic, {\n                    title: \"Maintenance Fees\",\n                    value: 1000,\n                    prefix: \"$\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    children: [\" \", \"Min: $0.30/ft \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 184,\n                      columnNumber: 39\n                    }, this), \" Avg: $0.40/ft \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 184,\n                      columnNumber: 60\n                    }, this), \" Max: $0.50/ft\", \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              gutter: 16,\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                span: 12,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  children: [/*#__PURE__*/_jsxDEV(Statistic, {\n                    title: \"Utility Fees\",\n                    value: 500,\n                    prefix: \"$\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    children: [\" \", \"Electricity: $200 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 196,\n                      columnNumber: 43\n                    }, this), \" Water: $200 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 196,\n                      columnNumber: 62\n                    }, this), \" Internet: $100\", \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                span: 12,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  children: [/*#__PURE__*/_jsxDEV(Statistic, {\n                    title: \"Taxes\",\n                    value: 750,\n                    prefix: \"$\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    children: [\" \", \"GST: $300 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 207,\n                      columnNumber: 35\n                    }, this), \" HST: $200 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 207,\n                      columnNumber: 52\n                    }, this), \" PST: $250\", \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)\n        }, \"1\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), imagePaneData.map((pane, index) => {\n          return /*#__PURE__*/_jsxDEV(TabPane, {\n            tab: imagePaneData[index].tabName,\n            children: /*#__PURE__*/_jsxDEV(StyledResultGalleryDiv, {\n              children: /*#__PURE__*/_jsxDEV(PreviewGroup, {\n                children: imagePaneData[index].images.map((image, idx) => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(Image, {\n                      src: image\n                    }, idx, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 226,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 29\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 19\n            }, this)\n          }, imagePaneData[index].index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(StyledLoadingDiv, {\n      children: /*#__PURE__*/_jsxDEV(Spin, {\n        indicator: loadingIcon,\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Result, \"FfZz+UQb/l8kTXQgrW3abSSARLE=\", false, function () {\n  return [useParams];\n});\n\n_c = Result;\nexport default Result;\n\nvar _c;\n\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"sources":["/Users/farzanhaq/Desktop/PropertyPal/src/components/Results/Result/Result.tsx"],"names":["Divider","Typography","Tabs","Row","Col","Statistic","Card","Image","Spin","unitMedia1","unitMedia2","unitMedia3","unitMedia4","viewsMedia1","viewsMedia2","viewsMedia3","viewsMedia4","neighbourhoodMedia1","neighbourhoodMedia2","neighbourhoodMedia3","floorplanMedia1","floorplanMedia2","Link","useParams","StyledDiv","StyledLoadingDiv","StyledResultBookDiv","StyledResultFeesDiv","StyledResultGalleryDiv","StyledTitle","StyledResultParagraph","StyledResultFeesRow","StyledResultBookButton","ArrowRightOutlined","useEffect","useState","API","listUnits","StyledLoadingIcon","TabPane","PreviewGroup","unitImages","viewsImages","neighbourHoodImages","floorplanImages","loadingIcon","Result","unit","setUnit","id","getUnit","filter","eq","selectedUnit","graphql","query","variables","unit_number","price","square_ft","beds","baths","occupancy_date","data","items","selectedUnitObj","console","log","err","imagePaneData","tabName","images","index","Object","keys","map","key","pane","image","idx"],"mappings":";;;AAAA,SACEA,OADF,EAEEC,UAFF,EAGEC,IAHF,EAIEC,GAJF,EAKEC,GALF,EAMEC,SANF,EAOEC,IAPF,EAQEC,KARF,EASEC,IATF,QAUO,MAVP;AAWA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,mBAAP,MAAgC,0CAAhC;AACA,OAAOC,mBAAP,MAAgC,0CAAhC;AACA,OAAOC,mBAAP,MAAgC,0CAAhC;AACA,OAAOC,eAAP,MAA4B,qCAA5B;AACA,OAAOC,eAAP,MAA4B,qCAA5B;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AACA,SACEC,SADF,EAEEC,gBAFF,EAGEC,mBAHF,EAIEC,mBAJF,EAKEC,sBALF,QAMO,wBANP;AAOA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,qBAAT,QAAsC,8BAAtC;AACA,SAASC,mBAAT,QAAoC,wBAApC;AACA,SAASC,sBAAT,QAAuC,2BAAvC;AACA,SAASC,kBAAT,QAAmC,mBAAnC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SAASC,iBAAT,QAAkC,oCAAlC;;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAcrC,IAApB;AACA,MAAM;AAAEsC,EAAAA;AAAF,IAAmBjC,KAAzB;AAEA,MAAMkC,UAAU,GAAG,CAAChC,UAAD,EAAaC,UAAb,EAAyBC,UAAzB,EAAqCC,UAArC,CAAnB;AACA,MAAM8B,WAAW,GAAG,CAAC7B,WAAD,EAAcC,WAAd,EAA2BC,WAA3B,EAAwCC,WAAxC,CAApB;AACA,MAAM2B,mBAAmB,GAAG,CAC1B1B,mBAD0B,EAE1BC,mBAF0B,EAG1BC,mBAH0B,CAA5B;AAKA,MAAMyB,eAAe,GAAG,CAACxB,eAAD,EAAkBC,eAAlB,CAAxB;;AAWA,MAAMwB,WAAW,gBAAG,QAAC,iBAAD;AAAmB,EAAA,IAAI;AAAvB;AAAA;AAAA;AAAA;AAAA,QAApB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,EAAhC;AACA,QAAM;AAAEc,IAAAA;AAAF,MAAS1B,SAAS,EAAxB;AAEAW,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,OAAO,GAAG,YAAY;AAC1B,QAAI;AACF,YAAMC,MAAM,GAAG;AACbF,QAAAA,EAAE,EAAE;AACFG,UAAAA,EAAE,EAAEH;AADF;AADS,OAAf;AAMA,YAAMI,YAAiB,GAAG,MAAMjB,GAAG,CAACkB,OAAJ,CAAY;AAC1CC,QAAAA,KAAK,EAAElB,SADmC;AAE1CmB,QAAAA,SAAS,EAAE;AAAEL,UAAAA,MAAM,EAAEA;AAAV;AAF+B,OAAZ,CAAhC;AAKA,YAAM;AAAEM,QAAAA,WAAF;AAAeC,QAAAA,KAAf;AAAsBC,QAAAA,SAAtB;AAAiCC,QAAAA,IAAjC;AAAuCC,QAAAA,KAAvC;AAA8CC,QAAAA;AAA9C,UACJT,YAAY,CAACU,IAAb,CAAkB1B,SAAlB,CAA4B2B,KAA5B,CAAkC,CAAlC,CADF;AAGA,YAAMC,eAAqB,GAAG;AAC5BR,QAAAA,WAAW,EAAEA,WADe;AAE5BC,QAAAA,KAAK,EAAEA,KAFqB;AAG5BC,QAAAA,SAAS,EAAEA,SAHiB;AAI5BC,QAAAA,IAAI,EAAEA,IAJsB;AAK5BC,QAAAA,KAAK,EAAEA,KALqB;AAM5BC,QAAAA,cAAc,EAAEA;AANY,OAA9B;AASAI,MAAAA,OAAO,CAACC,GAAR,CAAYF,eAAZ;AAEAjB,MAAAA,OAAO,CAACiB,eAAD,CAAP;AACD,KA3BD,CA2BE,OAAOG,GAAP,EAAY;AACZF,MAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF,GA/BD;;AAiCA,QAAMC,aAAa,GAAG,CACpB;AACEC,IAAAA,OAAO,EAAE,YADX;AAEEC,IAAAA,MAAM,EAAE9B,UAFV;AAGE+B,IAAAA,KAAK,EAAE;AAHT,GADoB,EAMpB;AACEF,IAAAA,OAAO,EAAE,OADX;AAEEC,IAAAA,MAAM,EAAE7B,WAFV;AAGE8B,IAAAA,KAAK,EAAE;AAHT,GANoB,EAWpB;AACEF,IAAAA,OAAO,EAAE,eADX;AAEEC,IAAAA,MAAM,EAAE5B,mBAFV;AAGE6B,IAAAA,KAAK,EAAE;AAHT,GAXoB,EAgBpB;AACEF,IAAAA,OAAO,EAAE,WADX;AAEEC,IAAAA,MAAM,EAAE3B,eAFV;AAGE4B,IAAAA,KAAK,EAAE;AAHT,GAhBoB,CAAtB;AAuBA,sBACE,QAAC,SAAD;AAAA,cACGzB,IAAI,gBACH;AAAA,8BACE,QAAC,UAAD;AAAA,gCACE,QAAC,WAAD;AAAa,UAAA,KAAK,EAAE,CAApB;AAAA,8BAA6BA,IAAI,CAACU,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,GAAD;AAAA,oBACGgB,MAAM,CAACC,IAAP,CAAY3B,IAAZ,EAAkB4B,GAAlB,CAAuBC,GAAD,iBACrB,QAAC,GAAD;AAAK,YAAA,IAAI,EAAE,CAAX;AAAA,mCACE,QAAC,qBAAD;AAAuB,cAAA,IAAI,EAAC,WAA5B;AAAA,wBACG7B,IAAI,CAAC6B,GAAD;AADP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAaE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAbF,eAcE,QAAC,mBAAD;AAAA,+BACE,QAAC,sBAAD;AAAwB,UAAA,IAAI,EAAC,SAA7B;AAAuC,UAAA,IAAI,EAAC,OAA5C;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,UAAT;AAAA,iDACW,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,oBADX;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAdF,eAqBE;AAAA;AAAA;AAAA;AAAA,cArBF,eAsBE,QAAC,IAAD;AAAM,QAAA,WAAW,EAAC,MAAlB;AAAA,gCACE,QAAC,OAAD;AAAS,UAAA,GAAG,EAAC,OAAb;AAAA,iCACE,QAAC,mBAAD;AAAA,oCACE,QAAC,mBAAD;AAAqB,cAAA,MAAM,EAAE,EAA7B;AAAA,sCACE,QAAC,GAAD;AAAK,gBAAA,IAAI,EAAE,EAAX;AAAA,uCACE,QAAC,IAAD;AAAA,0CACE,QAAC,SAAD;AACE,oBAAA,KAAK,EAAC,mBADR;AAEE,oBAAA,KAAK,EAAE,MAFT;AAGE,oBAAA,MAAM,EAAC;AAHT;AAAA;AAAA;AAAA;AAAA,0BADF,eAME,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,0BANF,eAOE,QAAC,UAAD;AAAA,+BACG,GADH,oCAEmB;AAAA;AAAA;AAAA;AAAA,4BAFnB,yCAE+C;AAAA;AAAA;AAAA;AAAA,4BAF/C,EAEsD,GAFtD;AAAA;AAAA;AAAA;AAAA;AAAA,0BAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAgBE,QAAC,GAAD;AAAK,gBAAA,IAAI,EAAE,EAAX;AAAA,uCACE,QAAC,IAAD;AAAA,0CACE,QAAC,SAAD;AACE,oBAAA,KAAK,EAAC,kBADR;AAEE,oBAAA,KAAK,EAAE,IAFT;AAGE,oBAAA,MAAM,EAAC;AAHT;AAAA;AAAA;AAAA;AAAA,0BADF,eAME,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,0BANF,eAOE,QAAC,UAAD;AAAA,+BACG,GADH,iCAEgB;AAAA;AAAA;AAAA;AAAA,4BAFhB,kCAEqC;AAAA;AAAA;AAAA;AAAA,4BAFrC,oBAE0D,GAF1D;AAAA;AAAA;AAAA;AAAA;AAAA,0BAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAgCE,QAAC,GAAD;AAAK,cAAA,MAAM,EAAE,EAAb;AAAA,sCACE,QAAC,GAAD;AAAK,gBAAA,IAAI,EAAE,EAAX;AAAA,uCACE,QAAC,IAAD;AAAA,0CACE,QAAC,SAAD;AAAW,oBAAA,KAAK,EAAC,cAAjB;AAAgC,oBAAA,KAAK,EAAE,GAAvC;AAA4C,oBAAA,MAAM,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,0BAFF,eAGE,QAAC,UAAD;AAAA,+BACG,GADH,qCAEoB;AAAA;AAAA;AAAA;AAAA,4BAFpB,gCAEuC;AAAA;AAAA;AAAA;AAAA,4BAFvC,qBAGO,GAHP;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAYE,QAAC,GAAD;AAAK,gBAAA,IAAI,EAAE,EAAX;AAAA,uCACE,QAAC,IAAD;AAAA,0CACE,QAAC,SAAD;AAAW,oBAAA,KAAK,EAAC,OAAjB;AAAyB,oBAAA,KAAK,EAAE,GAAhC;AAAqC,oBAAA,MAAM,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,0BAFF,eAGE,QAAC,UAAD;AAAA,+BACG,GADH,6BAEY;AAAA;AAAA;AAAA;AAAA,4BAFZ,8BAE6B;AAAA;AAAA;AAAA;AAAA,4BAF7B,gBAE8C,GAF9C;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAhCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,WAAyB,GAAzB;AAAA;AAAA;AAAA;AAAA,gBADF,EA2DGP,aAAa,CAACM,GAAd,CAAkB,CAACE,IAAD,EAAOL,KAAP,KAAiB;AAClC,8BACE,QAAC,OAAD;AACE,YAAA,GAAG,EAAEH,aAAa,CAACG,KAAD,CAAb,CAAqBF,OAD5B;AAAA,mCAIE,QAAC,sBAAD;AAAA,qCACE,QAAC,YAAD;AAAA,0BACGD,aAAa,CAACG,KAAD,CAAb,CAAqBD,MAArB,CAA4BI,GAA5B,CACC,CAACG,KAAD,EAAgBC,GAAhB,KAAgC;AAC9B,sCACE;AAAA,2CACE,QAAC,KAAD;AAAiB,sBAAA,GAAG,EAAED;AAAtB,uBAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BADF;AAKD,iBAPF;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAJF,aAEOV,aAAa,CAACG,KAAD,CAAb,CAAqBA,KAF5B;AAAA;AAAA;AAAA;AAAA,kBADF;AAoBD,SArBA,CA3DH;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBF;AAAA,oBADG,gBA2GH,QAAC,gBAAD;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAE3B,WAAjB;AAA8B,QAAA,IAAI,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AA5GJ;AAAA;AAAA;AAAA;AAAA,UADF;AAmHD,CAnLD;;GAAMC,M;UAEWvB,S;;;KAFXuB,M;AAqLN,eAAeA,MAAf","sourcesContent":["import {\n  Divider,\n  Typography,\n  Tabs,\n  Row,\n  Col,\n  Statistic,\n  Card,\n  Image,\n  Spin,\n} from \"antd\";\nimport unitMedia1 from \"../../../images/unitMedia1.jpeg\";\nimport unitMedia2 from \"../../../images/unitMedia2.jpeg\";\nimport unitMedia3 from \"../../../images/unitMedia3.jpeg\";\nimport unitMedia4 from \"../../../images/unitMedia4.jpeg\";\nimport viewsMedia1 from \"../../../images/viewsMedia1.jpeg\";\nimport viewsMedia2 from \"../../../images/viewsMedia2.jpeg\";\nimport viewsMedia3 from \"../../../images/viewsMedia3.jpeg\";\nimport viewsMedia4 from \"../../../images/viewsMedia4.jpeg\";\nimport neighbourhoodMedia1 from \"../../../images/neighbourhoodMedia1.jpeg\";\nimport neighbourhoodMedia2 from \"../../../images/neighbourhoodMedia2.jpeg\";\nimport neighbourhoodMedia3 from \"../../../images/neighbourhoodMedia3.jpeg\";\nimport floorplanMedia1 from \"../../../images/floorplanMedia1.png\";\nimport floorplanMedia2 from \"../../../images/floorplanMedia2.png\";\nimport { Link, useParams } from \"react-router-dom\";\nimport {\n  StyledDiv,\n  StyledLoadingDiv,\n  StyledResultBookDiv,\n  StyledResultFeesDiv,\n  StyledResultGalleryDiv,\n} from \"../../Styles/Div.style\";\nimport { StyledTitle } from \"../../Styles/Title.style\";\nimport { StyledResultParagraph } from \"../../Styles/Paragraph.style\";\nimport { StyledResultFeesRow } from \"../../Styles/Row.style\";\nimport { StyledResultBookButton } from \"../../Styles/Button.style\";\nimport { ArrowRightOutlined } from \"@ant-design/icons\";\nimport { useEffect, useState } from \"react\";\nimport { API } from \"aws-amplify\";\nimport { listUnits } from \"../../../graphql/queries\";\nimport { StyledLoadingIcon } from \"../../Styles/LoadingOutlined.style\";\n\nconst { TabPane } = Tabs;\nconst { PreviewGroup } = Image;\n\nconst unitImages = [unitMedia1, unitMedia2, unitMedia3, unitMedia4];\nconst viewsImages = [viewsMedia1, viewsMedia2, viewsMedia3, viewsMedia4];\nconst neighbourHoodImages = [\n  neighbourhoodMedia1,\n  neighbourhoodMedia2,\n  neighbourhoodMedia3,\n];\nconst floorplanImages = [floorplanMedia1, floorplanMedia2];\n\ninterface Unit {\n  unit_number: number;\n  price: string;\n  square_ft: number;\n  beds: number;\n  baths: number;\n  occupancy_date: number;\n}\n\nconst loadingIcon = <StyledLoadingIcon spin />;\n\nconst Result = () => {\n  const [unit, setUnit] = useState<Unit>();\n  const { id } = useParams<{ id: string }>();\n\n  useEffect(() => {\n    getUnit();\n  }, []);\n\n  const getUnit = async () => {\n    try {\n      const filter = {\n        id: {\n          eq: id,\n        },\n      };\n\n      const selectedUnit: any = await API.graphql({\n        query: listUnits,\n        variables: { filter: filter },\n      });\n\n      const { unit_number, price, square_ft, beds, baths, occupancy_date } =\n        selectedUnit.data.listUnits.items[0];\n\n      const selectedUnitObj: Unit = {\n        unit_number: unit_number,\n        price: price,\n        square_ft: square_ft,\n        beds: beds,\n        baths: baths,\n        occupancy_date: occupancy_date,\n      };\n\n      console.log(selectedUnitObj);\n\n      setUnit(selectedUnitObj);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  \n  const imagePaneData = [\n    {\n      tabName: \"Renderings\",\n      images: unitImages,\n      index: \"2\",\n    },\n    {\n      tabName: \"Views\",\n      images: viewsImages,\n      index: \"3\",\n    },\n    {\n      tabName: \"Neighbourhood\",\n      images: neighbourHoodImages,\n      index: \"4\",\n    },\n    {\n      tabName: \"Floorplan\",\n      images: floorplanImages,\n      index: \"5\",\n    },\n  ];\n\n  return (\n    <StyledDiv>\n      {unit ? (\n        <>\n          <Typography>\n            <StyledTitle level={2}>Unit {unit.unit_number}</StyledTitle>\n            <Row>\n              {Object.keys(unit).map((key: string) => (\n                <Col span={4}>\n                  <StyledResultParagraph type=\"secondary\">\n                    {unit[key as keyof Unit]}\n                  </StyledResultParagraph>\n                </Col>\n              ))}\n            </Row>\n          </Typography>\n          <Divider />\n          <StyledResultBookDiv>\n            <StyledResultBookButton type=\"primary\" size=\"large\">\n              <Link to=\"/booking\">\n                Book Now <ArrowRightOutlined />\n              </Link>\n            </StyledResultBookButton>\n          </StyledResultBookDiv>\n          <br />\n          <Tabs tabPosition=\"left\">\n            <TabPane tab=\"Costs\" key=\"1\">\n              <StyledResultFeesDiv>\n                <StyledResultFeesRow gutter={16}>\n                  <Col span={12}>\n                    <Card>\n                      <Statistic\n                        title=\"Estimated Mortage\"\n                        value={500000}\n                        prefix=\"$\"\n                      />\n                      <Divider />\n                      <Typography>\n                        {\" \"}\n                        20% down payment <br /> 25 year amortization <br />{\" \"}\n                        1.75% interest\n                      </Typography>\n                    </Card>\n                  </Col>\n                  <Col span={12}>\n                    <Card>\n                      <Statistic\n                        title=\"Maintenance Fees\"\n                        value={1000}\n                        prefix=\"$\"\n                      />\n                      <Divider />\n                      <Typography>\n                        {\" \"}\n                        Min: $0.30/ft <br /> Avg: $0.40/ft <br /> Max: $0.50/ft{\" \"}\n                      </Typography>\n                    </Card>\n                  </Col>\n                </StyledResultFeesRow>\n                <Row gutter={16}>\n                  <Col span={12}>\n                    <Card>\n                      <Statistic title=\"Utility Fees\" value={500} prefix=\"$\" />\n                      <Divider />\n                      <Typography>\n                        {\" \"}\n                        Electricity: $200 <br /> Water: $200 <br /> Internet:\n                        $100{\" \"}\n                      </Typography>\n                    </Card>\n                  </Col>\n                  <Col span={12}>\n                    <Card>\n                      <Statistic title=\"Taxes\" value={750} prefix=\"$\" />\n                      <Divider />\n                      <Typography>\n                        {\" \"}\n                        GST: $300 <br /> HST: $200 <br /> PST: $250{\" \"}\n                      </Typography>\n                    </Card>\n                  </Col>\n                </Row>\n              </StyledResultFeesDiv>\n            </TabPane>\n            {imagePaneData.map((pane, index) => {\n              return (\n                <TabPane\n                  tab={imagePaneData[index].tabName}\n                  key={imagePaneData[index].index}\n                >\n                  <StyledResultGalleryDiv>\n                    <PreviewGroup>\n                      {imagePaneData[index].images.map(\n                        (image: string, idx: number) => {\n                          return (\n                            <div>\n                              <Image key={idx} src={image} />\n                            </div>\n                          );\n                        }\n                      )}\n                    </PreviewGroup>\n                  </StyledResultGalleryDiv>\n                </TabPane>\n              );\n            })}\n          </Tabs>\n        </>\n      ) : (\n        <StyledLoadingDiv>\n          <Spin indicator={loadingIcon} size=\"large\" />\n        </StyledLoadingDiv>\n      )}\n    </StyledDiv>\n  );\n};\n\nexport default Result;\n"]},"metadata":{},"sourceType":"module"}