{"ast":null,"code":"var _jsxFileName = \"/Users/farzanhaq/Desktop/PropertyPal/src/components/Authentication/Verification/Verification.tsx\",\n    _s = $RefreshSig$();\n\nimport { Alert, Button, Divider, Form, Input, Typography } from \"antd\";\nimport { Auth } from \"aws-amplify\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { StyledContentDiv, StyledDiv } from \"../../Styles/Div.style\";\nimport { StyledAuthenticationForm } from \"../../Styles/Form.style\";\nimport { StyledTitle } from \"../../Styles/Title.style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Item\n} = Form;\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 8\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 16,\n      offset: 8\n    }\n  }\n};\n\nconst Verification = () => {\n  _s();\n\n  const [showAlert, setShowAlert] = useState(false);\n  const [form] = Form.useForm();\n  const history = useHistory();\n\n  const onVerify = async values => {\n    try {\n      setShowAlert(false);\n      await Auth.confirmSignUp(values.email, values.code);\n      history.push(\"/login\");\n    } catch (error) {\n      setShowAlert(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledDiv, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      children: /*#__PURE__*/_jsxDEV(StyledTitle, {\n        level: 2,\n        children: \"Verification\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), showAlert && /*#__PURE__*/_jsxDEV(Alert, {\n      message: \"The verification code you have entered is incorrect. Please try again.\",\n      type: \"error\",\n      showIcon: true,\n      closable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(StyledContentDiv, {\n      children: /*#__PURE__*/_jsxDEV(StyledAuthenticationForm, { ...formItemLayout,\n        form: form,\n        name: \"register\",\n        onFinish: onVerify,\n        scrollToFirstError: true,\n        children: [/*#__PURE__*/_jsxDEV(Item, {\n          name: \"email\",\n          label: \"E-mail\",\n          rules: [{\n            type: \"email\",\n            message: \"The input is not a valid email!\"\n          }, {\n            required: true,\n            message: \"Please enter your email\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Item, {\n          name: \"code\",\n          label: \"Verification Code\",\n          rules: [{\n            required: true,\n            message: \"Please enter your verification code\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Item, { ...tailFormItemLayout,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Verification, \"43oawEeovhntO95n83BgCySG2Gg=\", false, function () {\n  return [Form.useForm, useHistory];\n});\n\n_c = Verification;\nexport default Verification;\n\nvar _c;\n\n$RefreshReg$(_c, \"Verification\");","map":{"version":3,"sources":["/Users/farzanhaq/Desktop/PropertyPal/src/components/Authentication/Verification/Verification.tsx"],"names":["Alert","Button","Divider","Form","Input","Typography","Auth","useState","useHistory","StyledContentDiv","StyledDiv","StyledAuthenticationForm","StyledTitle","Item","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","Verification","showAlert","setShowAlert","form","useForm","history","onVerify","values","confirmSignUp","email","code","push","error","type","message","required"],"mappings":"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","sourcesContent":["import { Alert, Button, Divider, Form, Input, Typography } from \"antd\";\nimport { Auth } from \"aws-amplify\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { StyledContentDiv, StyledDiv } from \"../../Styles/Div.style\";\nimport { StyledAuthenticationForm } from \"../../Styles/Form.style\";\nimport { StyledTitle } from \"../../Styles/Title.style\";\n\nconst { Item } = Form;\n\nconst formItemLayout: {\n  labelCol: {\n    xs: {\n      span: number;\n    };\n    sm: {\n      span: number;\n    };\n  };\n  wrapperCol: {\n    xs: {\n      span: number;\n    };\n    sm: {\n      span: number;\n    };\n  };\n} = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\n\nconst tailFormItemLayout: {\n  wrapperCol: {\n    xs: {\n      span: number;\n      offset: number;\n    };\n    sm: {\n      span: number;\n      offset: number;\n    };\n  };\n} = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nconst Verification = () => {\n  const [showAlert, setShowAlert] = useState<boolean>(false);\n  const [form] = Form.useForm();\n  const history = useHistory();\n\n  const onVerify = async (values: any) => {\n    try {\n      setShowAlert(false);\n      await Auth.confirmSignUp(values.email, values.code);\n      history.push(\"/login\");\n    } catch (error) {\n      setShowAlert(true);\n    }\n  };\n\n  return (\n    <StyledDiv>\n      <Typography>\n        <StyledTitle level={2}>Verification</StyledTitle>\n      </Typography>\n      <Divider />\n      {showAlert && (\n        <Alert\n          message=\"The verification code you have entered is incorrect. Please try again.\"\n          type=\"error\"\n          showIcon\n          closable\n        />\n      )}\n      <StyledContentDiv>\n        <StyledAuthenticationForm\n          {...formItemLayout}\n          form={form}\n          name=\"register\"\n          onFinish={onVerify}\n          scrollToFirstError\n        >\n          <Item\n            name=\"email\"\n            label=\"E-mail\"\n            rules={[\n              {\n                type: \"email\",\n                message: \"The input is not a valid email!\",\n              },\n              {\n                required: true,\n                message: \"Please enter your email\",\n              },\n            ]}\n          >\n            <Input />\n          </Item>\n          <Item\n            name=\"code\"\n            label=\"Verification Code\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter your verification code\",\n              },\n            ]}\n          >\n            <Input />\n          </Item>\n          <Item {...tailFormItemLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Confirm\n            </Button>\n          </Item>\n        </StyledAuthenticationForm>\n      </StyledContentDiv>\n    </StyledDiv>\n  );\n};\n\nexport default Verification;\n"]},"metadata":{},"sourceType":"module"}