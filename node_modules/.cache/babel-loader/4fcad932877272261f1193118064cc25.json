{"ast":null,"code":"var _jsxFileName = \"/Users/farzanhaq/Desktop/PropertyPal/src/components/Authentication/Reset/Reset.tsx\",\n    _s = $RefreshSig$();\n\nimport { Divider, Typography, Form, Input, Button } from \"antd\";\nimport { useHistory } from \"react-router-dom\";\nimport { Auth } from \"aws-amplify\";\nimport { StyledTitle } from \"../../Styles/Title.style\";\nimport { StyledContentDiv, StyledDiv } from \"../../Styles/Div.style\";\nimport { StyledAuthenticationForm } from \"../../Styles/Form.style\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Item\n} = Form;\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 8\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 16,\n      offset: 8\n    }\n  }\n};\n\nconst Reset = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [isEmailSent, setIsEmailSent] = useState(false);\n  const [form] = Form.useForm();\n  const history = useHistory();\n\n  const onReset = async values => {\n    if (isEmailSent) {\n      try {\n        await Auth.forgotPasswordSubmit(values.email, values.code, values.password);\n        setIsEmailSent(true);\n        setEmail(values.email);\n      } catch (error) {\n        console.log(\"error sending email: \", error);\n      }\n    } else {\n      try {\n        await Auth.forgotPassword(email);\n        history.push(\"/login\");\n      } catch (error) {\n        console.log(\"error resetting password: \", error);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledDiv, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      children: /*#__PURE__*/_jsxDEV(StyledTitle, {\n        level: 2,\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledContentDiv, {\n      children: isEmailSent ? /*#__PURE__*/_jsxDEV(StyledAuthenticationForm, { ...formItemLayout,\n        form: form,\n        name: \"register\",\n        onFinish: onReset,\n        scrollToFirstError: true,\n        children: [/*#__PURE__*/_jsxDEV(Item, {\n          name: \"code\",\n          label: \"Verification Code\",\n          rules: [{\n            required: true,\n            message: \"Please enter your verification code\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Item, {\n          name: \"password\",\n          label: \"New Password\",\n          rules: [{\n            required: true,\n            message: \"Please enter your new password\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Item, { ...tailFormItemLayout,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(StyledAuthenticationForm, { ...formItemLayout,\n        form: form,\n        name: \"register\",\n        onFinish: onReset,\n        scrollToFirstError: true,\n        children: [/*#__PURE__*/_jsxDEV(Item, {\n          name: \"email\",\n          label: \"E-mail\",\n          rules: [{\n            type: \"email\",\n            message: \"The input is not a valid email!\"\n          }, {\n            required: true,\n            message: \"Please enter your email\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Item, { ...tailFormItemLayout,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Reset, \"6YSyw3o84v/NBa5V0jq68ZG+M/k=\", false, function () {\n  return [Form.useForm, useHistory];\n});\n\n_c = Reset;\nexport default Reset;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reset\");","map":{"version":3,"sources":["/Users/farzanhaq/Desktop/PropertyPal/src/components/Authentication/Reset/Reset.tsx"],"names":["Divider","Typography","Form","Input","Button","useHistory","Auth","StyledTitle","StyledContentDiv","StyledDiv","StyledAuthenticationForm","useState","Item","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","Reset","email","setEmail","isEmailSent","setIsEmailSent","form","useForm","history","onReset","values","forgotPasswordSubmit","code","password","error","console","log","forgotPassword","push","required","message","type"],"mappings":"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","sourcesContent":["import { Divider, Typography, Form, Input, Button } from \"antd\";\nimport { useHistory } from \"react-router-dom\";\nimport { Auth } from \"aws-amplify\";\nimport { StyledTitle } from \"../../Styles/Title.style\";\nimport { StyledContentDiv, StyledDiv } from \"../../Styles/Div.style\";\nimport { StyledAuthenticationForm } from \"../../Styles/Form.style\";\nimport { useState } from \"react\";\n\nconst { Item } = Form;\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nconst Reset = () => {\n  const [email, setEmail] = useState(\"\");\n  const [isEmailSent, setIsEmailSent] = useState(false);\n  const [form] = Form.useForm();\n  const history = useHistory();\n\n  const onReset = async (values: any) => {\n    if (isEmailSent) {\n      try {\n        await Auth.forgotPasswordSubmit(\n          values.email,\n          values.code,\n          values.password\n        );\n\n        setIsEmailSent(true);\n        setEmail(values.email);\n      } catch (error) {\n        console.log(\"error sending email: \", error);\n      }\n    } else {\n      try {\n        await Auth.forgotPassword(email);\n        history.push(\"/login\");\n      } catch (error) {\n        console.log(\"error resetting password: \", error);\n      }\n    }\n  };\n\n  return (\n    <StyledDiv>\n      <Typography>\n        <StyledTitle level={2}>Reset Password</StyledTitle>\n      </Typography>\n      <Divider />\n      <StyledContentDiv>\n        {isEmailSent ? (\n          <StyledAuthenticationForm\n            {...formItemLayout}\n            form={form}\n            name=\"register\"\n            onFinish={onReset}\n            scrollToFirstError\n          >\n            <Item\n              name=\"code\"\n              label=\"Verification Code\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please enter your verification code\",\n                },\n              ]}\n            >\n              <Input />\n            </Item>\n\n            <Item\n              name=\"password\"\n              label=\"New Password\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please enter your new password\",\n                },\n              ]}\n            >\n              <Input />\n            </Item>\n\n            <Item {...tailFormItemLayout}>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Confirm\n              </Button>\n            </Item>\n          </StyledAuthenticationForm>\n        ) : (\n          <StyledAuthenticationForm\n            {...formItemLayout}\n            form={form}\n            name=\"register\"\n            onFinish={onReset}\n            scrollToFirstError\n          >\n            <Item\n              name=\"email\"\n              label=\"E-mail\"\n              rules={[\n                {\n                  type: \"email\",\n                  message: \"The input is not a valid email!\",\n                },\n                {\n                  required: true,\n                  message: \"Please enter your email\",\n                },\n              ]}\n            >\n              <Input />\n            </Item>\n            <Item {...tailFormItemLayout}>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Confirm\n              </Button>\n            </Item>\n          </StyledAuthenticationForm>\n        )}\n      </StyledContentDiv>\n    </StyledDiv>\n  );\n};\n\nexport default Reset;\n"]},"metadata":{},"sourceType":"module"}