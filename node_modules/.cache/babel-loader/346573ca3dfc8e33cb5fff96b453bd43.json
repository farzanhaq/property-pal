{"ast":null,"code":"var _jsxFileName = \"/Users/farzanhaq/Desktop/PropertyPal/src/components/Booking/Payment/PaymentButton.tsx\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Button, message } from \"antd\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { processPayment } from \"../../../graphql/mutations\";\nimport { StyledCheckoutText } from \"../../Styles/Text.style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STRIPE_PUBLIC_KEY = \"pk_test_51K6Lv8JfUhuzTQLsnTrk8sZTeap3i5f9QUCq8UlN4Rk0LRc77GbxppRAAqW5yl6RimUU1DSEymcAw4ioHnyAoCI000QFZV7fIs\";\n\nconst PaymentButton = ({\n  total\n}) => {\n  console.log(total);\n\n  const handlePay = async () => {\n    const payload = {\n      id: uuidv4(),\n      total: total.replace(/,/g, \"\"),\n      success_url: \"http://localhost:3000/results\",\n      cancel_url: \"http://localhost:3000/results\"\n    };\n    const response = await API.graphql(graphqlOperation(processPayment, {\n      input: payload\n    }));\n    const stripePromise = await loadStripe(STRIPE_PUBLIC_KEY);\n    stripePromise === null || stripePromise === void 0 ? void 0 : stripePromise.redirectToCheckout({\n      sessionId: response.data.processPayment\n    }).then(function (result) {\n      message.error(result.error.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: loadStripe(STRIPE_PUBLIC_KEY),\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      size: \"large\",\n      type: \"primary\",\n      onClick: handlePay,\n      children: [\"Checkout with\", /*#__PURE__*/_jsxDEV(StyledCheckoutText, {\n        strong: true,\n        italic: true,\n        children: \"Stripe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PaymentButton;\nexport default PaymentButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentButton\");","map":{"version":3,"sources":["/Users/farzanhaq/Desktop/PropertyPal/src/components/Booking/Payment/PaymentButton.tsx"],"names":["Elements","loadStripe","Button","message","API","graphqlOperation","v4","uuidv4","processPayment","StyledCheckoutText","STRIPE_PUBLIC_KEY","PaymentButton","total","console","log","handlePay","payload","id","replace","success_url","cancel_url","response","graphql","input","stripePromise","redirectToCheckout","sessionId","data","then","result","error"],"mappings":";AAAA,SAASA,QAAT,QAAyB,yBAAzB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,MAAhC;AACA,SAASC,GAAT,EAAcC,gBAAd,QAAsC,aAAtC;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,SAASC,cAAT,QAA+B,4BAA/B;AACA,SAASC,kBAAT,QAAmC,yBAAnC;;AAEA,MAAMC,iBAAyB,GAC7B,6GADF;;AAOA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmC;AACrDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AACF,QAAMG,SAAS,GAAG,YAAY;AAC5B,UAAMC,OAAO,GAAG;AACdC,MAAAA,EAAE,EAAEV,MAAM,EADI;AAEdK,MAAAA,KAAK,EAAEA,KAAK,CAACM,OAAN,CAAc,IAAd,EAAoB,EAApB,CAFO;AAGdC,MAAAA,WAAW,EAAE,+BAHC;AAIdC,MAAAA,UAAU,EAAE;AAJE,KAAhB;AAOA,UAAMC,QAAa,GAAG,MAAMjB,GAAG,CAACkB,OAAJ,CAC1BjB,gBAAgB,CAACG,cAAD,EAAiB;AAAEe,MAAAA,KAAK,EAAEP;AAAT,KAAjB,CADU,CAA5B;AAIA,UAAMQ,aAAa,GAAG,MAAMvB,UAAU,CAACS,iBAAD,CAAtC;AAEAc,IAAAA,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CACTC,kBADJ,CACuB;AACnBC,MAAAA,SAAS,EAAEL,QAAQ,CAACM,IAAT,CAAcnB;AADN,KADvB,EAIGoB,IAJH,CAIQ,UAAUC,MAAV,EAAuB;AAC3B1B,MAAAA,OAAO,CAAC2B,KAAR,CAAcD,MAAM,CAACC,KAAP,CAAa3B,OAA3B;AACD,KANH;AAOD,GArBD;;AAuBA,sBACE,QAAC,QAAD;AAAU,IAAA,MAAM,EAAEF,UAAU,CAACS,iBAAD,CAA5B;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,OAAb;AAAqB,MAAA,IAAI,EAAC,SAA1B;AAAoC,MAAA,OAAO,EAAEK,SAA7C;AAAA,+CAEE,QAAC,kBAAD;AAAoB,QAAA,MAAM,MAA1B;AAA2B,QAAA,MAAM,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAnCD;;KAAMJ,a;AAqCN,eAAeA,aAAf","sourcesContent":["import { Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Button, message } from \"antd\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { processPayment } from \"../../../graphql/mutations\";\nimport { StyledCheckoutText } from \"../../Styles/Text.style\";\n\nconst STRIPE_PUBLIC_KEY: string =\n  \"pk_test_51K6Lv8JfUhuzTQLsnTrk8sZTeap3i5f9QUCq8UlN4Rk0LRc77GbxppRAAqW5yl6RimUU1DSEymcAw4ioHnyAoCI000QFZV7fIs\";\n\ninterface paymentButtonProps {\n  total: string;\n}\n\nconst PaymentButton = ({ total }: paymentButtonProps) => {\n    console.log(total)\n  const handlePay = async () => {\n    const payload = {\n      id: uuidv4(),\n      total: total.replace(/,/g, \"\"),\n      success_url: \"http://localhost:3000/results\",\n      cancel_url: \"http://localhost:3000/results\",\n    };\n\n    const response: any = await API.graphql(\n      graphqlOperation(processPayment, { input: payload })\n    );\n\n    const stripePromise = await loadStripe(STRIPE_PUBLIC_KEY);\n\n    stripePromise\n      ?.redirectToCheckout({\n        sessionId: response.data.processPayment,\n      })\n      .then(function (result: any) {\n        message.error(result.error.message);\n      });\n  };\n\n  return (\n    <Elements stripe={loadStripe(STRIPE_PUBLIC_KEY)}>\n      <Button size=\"large\" type=\"primary\" onClick={handlePay}>\n        Checkout with\n        <StyledCheckoutText strong italic>\n          Stripe\n        </StyledCheckoutText>\n      </Button>\n    </Elements>\n  );\n};\n\nexport default PaymentButton;\n"]},"metadata":{},"sourceType":"module"}