{"ast":null,"code":"var _jsxFileName = \"/Users/farzanhaq/Desktop/PropertyPal/src/components/Booking/Payment/PaymentButton.tsx\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Button } from \"antd\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { processPayment } from \"../../../graphql/mutations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PaymentButton = () => {\n  const stripePromise = loadStripe(\"pk_test_51K6Lv8JfUhuzTQLsnTrk8sZTeap3i5f9QUCq8UlN4Rk0LRc77GbxppRAAqW5yl6RimUU1DSEymcAw4ioHnyAoCI000QFZV7fIs\");\n\n  const handlePay = async () => {\n    const payload = {\n      id: uuidv4(),\n      total: \"5\",\n      success_url: \"http://localhost:3000/results\",\n      cancel_url: \"http://localhost:3000/results\"\n    };\n    const stripePromise = await loadStripe(\"pk_test_51K6Lv8JfUhuzTQLsnTrk8sZTeap3i5f9QUCq8UlN4Rk0LRc77GbxppRAAqW5yl6RimUU1DSEymcAw4ioHnyAoCI000QFZV7fIs\");\n    const response = await API.graphql(graphqlOperation(processPayment, {\n      input: payload\n    }));\n    console.log(response.data.processPayment);\n    stripePromise === null || stripePromise === void 0 ? void 0 : stripePromise.redirectToCheckout({\n      // Make the id field from the Checkout Session creation API response\n      // available to this file, so you can provide it as parameter here\n      // instead of the {{CHECKOUT_SESSION_ID}} placeholder.\n      sessionId: response.data.processPayment\n    }).then(function (result) {\n      console.log(result.error.message); // If `redirectToCheckout` fails due to a browser or network\n      // error, display the localized error message to your customer\n      // using `result.error.message`.\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripePromise,\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: handlePay,\n      children: \"Pay with Stripe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PaymentButton;\nexport default PaymentButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentButton\");","map":{"version":3,"sources":["/Users/farzanhaq/Desktop/PropertyPal/src/components/Booking/Payment/PaymentButton.tsx"],"names":["Elements","loadStripe","Button","API","graphqlOperation","v4","uuidv4","processPayment","PaymentButton","stripePromise","handlePay","payload","id","total","success_url","cancel_url","response","graphql","input","console","log","data","redirectToCheckout","sessionId","then","result","error","message"],"mappings":";AAAA,SAASA,QAAT,QAAyB,yBAAzB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,SAASC,GAAT,EAAcC,gBAAd,QAAsC,aAAtC;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,SAASC,cAAT,QAA+B,4BAA/B;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAMC,aAAa,GAAGR,UAAU,CAC9B,6GAD8B,CAAhC;;AAIA,QAAMS,SAAS,GAAG,YAAY;AAC5B,UAAMC,OAAO,GAAG;AACdC,MAAAA,EAAE,EAAEN,MAAM,EADI;AAEdO,MAAAA,KAAK,EAAE,GAFO;AAGdC,MAAAA,WAAW,EAAE,+BAHC;AAIdC,MAAAA,UAAU,EAAE;AAJE,KAAhB;AAOA,UAAMN,aAAa,GAAG,MAAMR,UAAU,CACpC,6GADoC,CAAtC;AAIA,UAAMe,QAAa,GAAG,MAAMb,GAAG,CAACc,OAAJ,CAC1Bb,gBAAgB,CAACG,cAAD,EAAiB;AAAEW,MAAAA,KAAK,EAAEP;AAAT,KAAjB,CADU,CAA5B;AAIAQ,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACK,IAAT,CAAcd,cAA1B;AAEAE,IAAAA,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CACTa,kBADJ,CACuB;AACnB;AACA;AACA;AACAC,MAAAA,SAAS,EAAEP,QAAQ,CAACK,IAAT,CAAcd;AAJN,KADvB,EAOGiB,IAPH,CAOQ,UAAUC,MAAV,EAAuB;AAC3BN,MAAAA,OAAO,CAACC,GAAR,CAAYK,MAAM,CAACC,KAAP,CAAaC,OAAzB,EAD2B,CAE3B;AACA;AACA;AACD,KAZH;AAaD,GA/BD;;AAiCA,sBACE,QAAC,QAAD;AAAU,IAAA,MAAM,EAAElB,aAAlB;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,EAAEC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA7CD;;KAAMF,a;AA+CN,eAAeA,aAAf","sourcesContent":["import { Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Button } from \"antd\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { processPayment } from \"../../../graphql/mutations\";\n\nconst PaymentButton = () => {\n  const stripePromise = loadStripe(\n    \"pk_test_51K6Lv8JfUhuzTQLsnTrk8sZTeap3i5f9QUCq8UlN4Rk0LRc77GbxppRAAqW5yl6RimUU1DSEymcAw4ioHnyAoCI000QFZV7fIs\"\n  );\n\n  const handlePay = async () => {\n    const payload = {\n      id: uuidv4(),\n      total: \"5\",\n      success_url: \"http://localhost:3000/results\",\n      cancel_url: \"http://localhost:3000/results\",\n    };\n\n    const stripePromise = await loadStripe(\n      \"pk_test_51K6Lv8JfUhuzTQLsnTrk8sZTeap3i5f9QUCq8UlN4Rk0LRc77GbxppRAAqW5yl6RimUU1DSEymcAw4ioHnyAoCI000QFZV7fIs\"\n    );\n\n    const response: any = await API.graphql(\n      graphqlOperation(processPayment, { input: payload })\n    );\n\n    console.log(response.data.processPayment);\n\n    stripePromise\n      ?.redirectToCheckout({\n        // Make the id field from the Checkout Session creation API response\n        // available to this file, so you can provide it as parameter here\n        // instead of the {{CHECKOUT_SESSION_ID}} placeholder.\n        sessionId: response.data.processPayment,\n      })\n      .then(function (result: any) {\n        console.log(result.error.message);\n        // If `redirectToCheckout` fails due to a browser or network\n        // error, display the localized error message to your customer\n        // using `result.error.message`.\n      });\n  };\n\n  return (\n    <Elements stripe={stripePromise}>\n      <Button type=\"primary\" onClick={handlePay}>\n        Pay with Stripe\n      </Button>\n    </Elements>\n  );\n};\n\nexport default PaymentButton;\n"]},"metadata":{},"sourceType":"module"}