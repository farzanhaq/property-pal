{"ast":null,"code":"var _jsxFileName = \"/Users/farzanhaq/Desktop/PropertyPal/src/components/Results/Result/Result.tsx\",\n    _s = $RefreshSig$();\n\nimport { Divider, Typography, Tabs, Row, Col, Statistic, Card, Image } from \"antd\";\nimport unitMedia1 from \"../../../images/unitMedia1.jpeg\";\nimport unitMedia2 from \"../../../images/unitMedia2.jpeg\";\nimport unitMedia3 from \"../../../images/unitMedia3.jpeg\";\nimport unitMedia4 from \"../../../images/unitMedia4.jpeg\";\nimport viewsMedia1 from \"../../../images/viewsMedia1.jpeg\";\nimport viewsMedia2 from \"../../../images/viewsMedia2.jpeg\";\nimport viewsMedia3 from \"../../../images/viewsMedia3.jpeg\";\nimport viewsMedia4 from \"../../../images/viewsMedia4.jpeg\";\nimport neighbourhoodMedia1 from \"../../../images/neighbourhoodMedia1.jpeg\";\nimport neighbourhoodMedia2 from \"../../../images/neighbourhoodMedia2.jpeg\";\nimport neighbourhoodMedia3 from \"../../../images/neighbourhoodMedia3.jpeg\";\nimport floorplanMedia1 from \"../../../images/floorplanMedia1.png\";\nimport floorplanMedia2 from \"../../../images/floorplanMedia2.png\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { StyledDiv, StyledResultBookDiv, StyledResultFeesDiv, StyledResultGalleryDiv } from \"../../Styles/Div.style\";\nimport { StyledTitle } from \"../../Styles/Title.style\";\nimport { StyledResultParagraph } from \"../../Styles/Paragraph.style\";\nimport { StyledResultFeesRow } from \"../../Styles/Row.style\";\nimport { StyledResultBookButton } from \"../../Styles/Button.style\";\nimport { ArrowRightOutlined } from \"@ant-design/icons\";\nimport { useEffect, useState } from \"react\";\nimport { API } from \"aws-amplify\";\nimport { listUnits } from \"../../../graphql/queries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  TabPane\n} = Tabs;\nconst {\n  PreviewGroup\n} = Image;\nconst unitImages = [unitMedia1, unitMedia2, unitMedia3, unitMedia4];\nconst viewsImages = [viewsMedia1, viewsMedia2, viewsMedia3, viewsMedia4];\nconst neighbourHoodImages = [neighbourhoodMedia1, neighbourhoodMedia2, neighbourhoodMedia3];\nconst floorplanImages = [floorplanMedia1, floorplanMedia2];\n\nconst Result = () => {\n  _s();\n\n  const [unit, setUnit] = useState();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    getUnit();\n  }, []);\n\n  const getUnit = async () => {\n    try {\n      const filter = {\n        id: {\n          eq: id\n        }\n      };\n      const selectedUnit = await API.graphql({\n        query: listUnits,\n        variables: {\n          filter: filter\n        }\n      });\n      setUnit(selectedUnit.data.listUnits.items);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  console.log(unit);\n  console.log(\"hi\");\n  const unitData = {\n    price: \"$2,500,000\",\n    square_ft: \"2,500 SQFT\",\n    beds: \"2 Beds\",\n    baths: \"2 Baths\",\n    occupancy: \"2022 Occupancy\",\n    floor: \"Floor 29\"\n  };\n  const imagePaneData = [{\n    tabName: \"Renderings\",\n    images: unitImages,\n    index: \"2\"\n  }, {\n    tabName: \"Views\",\n    images: viewsImages,\n    index: \"3\"\n  }, {\n    tabName: \"Neighbourhood\",\n    images: neighbourHoodImages,\n    index: \"4\"\n  }, {\n    tabName: \"Floorplan\",\n    images: floorplanImages,\n    index: \"5\"\n  }];\n  return /*#__PURE__*/_jsxDEV(StyledDiv, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      children: [/*#__PURE__*/_jsxDEV(StyledTitle, {\n        level: 2,\n        children: \"Unit 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: Object.keys(unitData).map(key => /*#__PURE__*/_jsxDEV(Col, {\n          span: 4,\n          children: /*#__PURE__*/_jsxDEV(StyledResultParagraph, {\n            type: \"secondary\",\n            children: unitData[key]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledResultBookDiv, {\n      children: /*#__PURE__*/_jsxDEV(StyledResultBookButton, {\n        type: \"primary\",\n        size: \"large\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/booking\",\n          children: [\"Book Now \", /*#__PURE__*/_jsxDEV(ArrowRightOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      tabPosition: \"left\",\n      children: [/*#__PURE__*/_jsxDEV(TabPane, {\n        tab: \"Costs\",\n        children: /*#__PURE__*/_jsxDEV(StyledResultFeesDiv, {\n          children: [/*#__PURE__*/_jsxDEV(StyledResultFeesRow, {\n            gutter: 16,\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              span: 12,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: [/*#__PURE__*/_jsxDEV(Statistic, {\n                  title: \"Estimated Mortage\",\n                  value: 500000,\n                  prefix: \"$\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  children: [\" \", \"20% down payment \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 38\n                  }, this), \" 25 year amortization \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 66\n                  }, this), \" 1.75% interest\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 12,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: [/*#__PURE__*/_jsxDEV(Statistic, {\n                  title: \"Maintenance Fees\",\n                  value: 1000,\n                  prefix: \"$\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  children: [\" \", \"Min: $0.30/ft \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 35\n                  }, this), \" Avg: $0.40/ft \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 56\n                  }, this), \" Max: $0.50/ft\", \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            gutter: 16,\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              span: 12,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: [/*#__PURE__*/_jsxDEV(Statistic, {\n                  title: \"Utility Fees\",\n                  value: 500,\n                  prefix: \"$\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  children: [\" \", \"Electricity: $200 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 39\n                  }, this), \" Water: $200 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 58\n                  }, this), \" Internet: $100\", \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 12,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: [/*#__PURE__*/_jsxDEV(Statistic, {\n                  title: \"Taxes\",\n                  value: 750,\n                  prefix: \"$\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  children: [\" \", \"GST: $300 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 31\n                  }, this), \" HST: $200 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 48\n                  }, this), \" PST: $250\", \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)\n      }, \"1\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), imagePaneData.map((pane, index) => {\n        return /*#__PURE__*/_jsxDEV(TabPane, {\n          tab: imagePaneData[index].tabName,\n          children: /*#__PURE__*/_jsxDEV(StyledResultGalleryDiv, {\n            children: /*#__PURE__*/_jsxDEV(PreviewGroup, {\n              children: imagePaneData[index].images.map((image, idx) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(Image, {\n                    src: image\n                  }, idx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this)\n        }, imagePaneData[index].index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Result, \"FfZz+UQb/l8kTXQgrW3abSSARLE=\", false, function () {\n  return [useParams];\n});\n\n_c = Result;\nexport default Result;\n\nvar _c;\n\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"sources":["/Users/farzanhaq/Desktop/PropertyPal/src/components/Results/Result/Result.tsx"],"names":["Divider","Typography","Tabs","Row","Col","Statistic","Card","Image","unitMedia1","unitMedia2","unitMedia3","unitMedia4","viewsMedia1","viewsMedia2","viewsMedia3","viewsMedia4","neighbourhoodMedia1","neighbourhoodMedia2","neighbourhoodMedia3","floorplanMedia1","floorplanMedia2","Link","useParams","StyledDiv","StyledResultBookDiv","StyledResultFeesDiv","StyledResultGalleryDiv","StyledTitle","StyledResultParagraph","StyledResultFeesRow","StyledResultBookButton","ArrowRightOutlined","useEffect","useState","API","listUnits","TabPane","PreviewGroup","unitImages","viewsImages","neighbourHoodImages","floorplanImages","Result","unit","setUnit","id","getUnit","filter","eq","selectedUnit","graphql","query","variables","data","items","err","console","log","unitData","price","square_ft","beds","baths","occupancy","floor","imagePaneData","tabName","images","index","Object","keys","map","key","pane","image","idx"],"mappings":"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","sourcesContent":["import {\n  Divider,\n  Typography,\n  Tabs,\n  Row,\n  Col,\n  Statistic,\n  Card,\n  Image,\n} from \"antd\";\nimport unitMedia1 from \"../../../images/unitMedia1.jpeg\";\nimport unitMedia2 from \"../../../images/unitMedia2.jpeg\";\nimport unitMedia3 from \"../../../images/unitMedia3.jpeg\";\nimport unitMedia4 from \"../../../images/unitMedia4.jpeg\";\nimport viewsMedia1 from \"../../../images/viewsMedia1.jpeg\";\nimport viewsMedia2 from \"../../../images/viewsMedia2.jpeg\";\nimport viewsMedia3 from \"../../../images/viewsMedia3.jpeg\";\nimport viewsMedia4 from \"../../../images/viewsMedia4.jpeg\";\nimport neighbourhoodMedia1 from \"../../../images/neighbourhoodMedia1.jpeg\";\nimport neighbourhoodMedia2 from \"../../../images/neighbourhoodMedia2.jpeg\";\nimport neighbourhoodMedia3 from \"../../../images/neighbourhoodMedia3.jpeg\";\nimport floorplanMedia1 from \"../../../images/floorplanMedia1.png\";\nimport floorplanMedia2 from \"../../../images/floorplanMedia2.png\";\nimport { Link, useParams } from \"react-router-dom\";\nimport {\n  StyledDiv,\n  StyledResultBookDiv,\n  StyledResultFeesDiv,\n  StyledResultGalleryDiv,\n} from \"../../Styles/Div.style\";\nimport { StyledTitle } from \"../../Styles/Title.style\";\nimport { StyledResultParagraph } from \"../../Styles/Paragraph.style\";\nimport { StyledResultFeesRow } from \"../../Styles/Row.style\";\nimport { StyledResultBookButton } from \"../../Styles/Button.style\";\nimport { ArrowRightOutlined } from \"@ant-design/icons\";\nimport { useEffect, useState } from \"react\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport { listUnits } from \"../../../graphql/queries\";\n\nconst { TabPane } = Tabs;\nconst { PreviewGroup } = Image;\n\nconst unitImages = [unitMedia1, unitMedia2, unitMedia3, unitMedia4];\nconst viewsImages = [viewsMedia1, viewsMedia2, viewsMedia3, viewsMedia4];\nconst neighbourHoodImages = [\n  neighbourhoodMedia1,\n  neighbourhoodMedia2,\n  neighbourhoodMedia3,\n];\nconst floorplanImages = [floorplanMedia1, floorplanMedia2];\n\ninterface Unit {\n  price: string;\n  square_ft: string;\n  beds: string;\n  baths: string;\n  occupancy: string;\n  floor: string;\n}\n\nconst Result = () => {\n  const [unit, setUnit] = useState<Unit>();\n  const { id } = useParams<{ id: string }>();\n\n  useEffect(() => {\n    getUnit();\n  }, []);\n\n  const getUnit = async () => {\n    try {\n      const filter = {\n        id: {\n          eq: id,\n        },\n      };\n\n      const selectedUnit: any = await API.graphql({\n        query: listUnits,\n        variables: { filter: filter },\n      });\n\n      setUnit(selectedUnit.data.listUnits.items);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  console.log(unit);\n  console.log(\"hi\");\n\n  const unitData = {\n    price: \"$2,500,000\",\n    square_ft: \"2,500 SQFT\",\n    beds: \"2 Beds\",\n    baths: \"2 Baths\",\n    occupancy: \"2022 Occupancy\",\n    floor: \"Floor 29\",\n  };\n\n  const imagePaneData = [\n    {\n      tabName: \"Renderings\",\n      images: unitImages,\n      index: \"2\",\n    },\n    {\n      tabName: \"Views\",\n      images: viewsImages,\n      index: \"3\",\n    },\n    {\n      tabName: \"Neighbourhood\",\n      images: neighbourHoodImages,\n      index: \"4\",\n    },\n    {\n      tabName: \"Floorplan\",\n      images: floorplanImages,\n      index: \"5\",\n    },\n  ];\n\n  return (\n    <StyledDiv>\n      <Typography>\n        <StyledTitle level={2}>Unit 1</StyledTitle>\n        <Row>\n          {Object.keys(unitData).map((key: string) => (\n            <Col span={4}>\n              <StyledResultParagraph type=\"secondary\">\n                {unitData[key as keyof Unit]}\n              </StyledResultParagraph>\n            </Col>\n          ))}\n        </Row>\n      </Typography>\n      <Divider />\n      <StyledResultBookDiv>\n        <StyledResultBookButton type=\"primary\" size=\"large\">\n          <Link to=\"/booking\">\n            Book Now <ArrowRightOutlined />\n          </Link>\n        </StyledResultBookButton>\n      </StyledResultBookDiv>\n      <br />\n      <Tabs tabPosition=\"left\">\n        <TabPane tab=\"Costs\" key=\"1\">\n          <StyledResultFeesDiv>\n            <StyledResultFeesRow gutter={16}>\n              <Col span={12}>\n                <Card>\n                  <Statistic\n                    title=\"Estimated Mortage\"\n                    value={500000}\n                    prefix=\"$\"\n                  />\n                  <Divider />\n                  <Typography>\n                    {\" \"}\n                    20% down payment <br /> 25 year amortization <br /> 1.75%\n                    interest\n                  </Typography>\n                </Card>\n              </Col>\n              <Col span={12}>\n                <Card>\n                  <Statistic title=\"Maintenance Fees\" value={1000} prefix=\"$\" />\n                  <Divider />\n                  <Typography>\n                    {\" \"}\n                    Min: $0.30/ft <br /> Avg: $0.40/ft <br /> Max: $0.50/ft{\" \"}\n                  </Typography>\n                </Card>\n              </Col>\n            </StyledResultFeesRow>\n            <Row gutter={16}>\n              <Col span={12}>\n                <Card>\n                  <Statistic title=\"Utility Fees\" value={500} prefix=\"$\" />\n                  <Divider />\n                  <Typography>\n                    {\" \"}\n                    Electricity: $200 <br /> Water: $200 <br /> Internet: $100{\" \"}\n                  </Typography>\n                </Card>\n              </Col>\n              <Col span={12}>\n                <Card>\n                  <Statistic title=\"Taxes\" value={750} prefix=\"$\" />\n                  <Divider />\n                  <Typography>\n                    {\" \"}\n                    GST: $300 <br /> HST: $200 <br /> PST: $250{\" \"}\n                  </Typography>\n                </Card>\n              </Col>\n            </Row>\n          </StyledResultFeesDiv>\n        </TabPane>\n        {imagePaneData.map((pane, index) => {\n          return (\n            <TabPane\n              tab={imagePaneData[index].tabName}\n              key={imagePaneData[index].index}\n            >\n              <StyledResultGalleryDiv>\n                <PreviewGroup>\n                  {imagePaneData[index].images.map(\n                    (image: string, idx: number) => {\n                      return (\n                        <div>\n                          <Image key={idx} src={image} />\n                        </div>\n                      );\n                    }\n                  )}\n                </PreviewGroup>\n              </StyledResultGalleryDiv>\n            </TabPane>\n          );\n        })}\n      </Tabs>\n    </StyledDiv>\n  );\n};\n\nexport default Result;\n"]},"metadata":{},"sourceType":"module"}