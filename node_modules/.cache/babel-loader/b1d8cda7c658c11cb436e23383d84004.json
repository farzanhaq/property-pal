{"ast":null,"code":"var _jsxFileName = \"/Users/farzanhaq/Desktop/PropertyPal/src/components/Booking/Payment/PaymentButton.tsx\";\nimport Icon from \"@ant-design/icons\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Button, message } from \"antd\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { processPayment } from \"../../../graphql/mutations\";\nimport { ReactComponent as IconLogo } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../images/stripe-brands.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STRIPE_PUBLIC_KEY = \"pk_test_51K6Lv8JfUhuzTQLsnTrk8sZTeap3i5f9QUCq8UlN4Rk0LRc77GbxppRAAqW5yl6RimUU1DSEymcAw4ioHnyAoCI000QFZV7fIs\";\n\nconst PaymentButton = () => {\n  const handlePay = async () => {\n    const payload = {\n      id: uuidv4(),\n      total: \"5\",\n      success_url: \"http://localhost:3000/results\",\n      cancel_url: \"http://localhost:3000/results\"\n    };\n    const response = await API.graphql(graphqlOperation(processPayment, {\n      input: payload\n    }));\n    const stripePromise = await loadStripe(STRIPE_PUBLIC_KEY);\n    stripePromise === null || stripePromise === void 0 ? void 0 : stripePromise.redirectToCheckout({\n      sessionId: response.data.processPayment\n    }).then(function (result) {\n      message.error(result.error.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: loadStripe(STRIPE_PUBLIC_KEY),\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: handlePay,\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        component: IconLogo,\n        style: {\n          fontSize: 200\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), \" Pay with\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PaymentButton;\nexport default PaymentButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentButton\");","map":{"version":3,"sources":["/Users/farzanhaq/Desktop/PropertyPal/src/components/Booking/Payment/PaymentButton.tsx"],"names":["Icon","Elements","loadStripe","Button","message","API","graphqlOperation","v4","uuidv4","processPayment","STRIPE_PUBLIC_KEY","PaymentButton","handlePay","payload","id","total","success_url","cancel_url","response","graphql","input","stripePromise","redirectToCheckout","sessionId","data","then","result","error","IconLogo","fontSize"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,mBAAjB;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,MAAhC;AACA,SAASC,GAAT,EAAcC,gBAAd,QAAsC,aAAtC;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,SAASC,cAAT,QAA+B,4BAA/B;;;AAGA,MAAMC,iBAAyB,GAC7B,6GADF;;AAGA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAMC,SAAS,GAAG,YAAY;AAC5B,UAAMC,OAAO,GAAG;AACdC,MAAAA,EAAE,EAAEN,MAAM,EADI;AAEdO,MAAAA,KAAK,EAAE,GAFO;AAGdC,MAAAA,WAAW,EAAE,+BAHC;AAIdC,MAAAA,UAAU,EAAE;AAJE,KAAhB;AAOA,UAAMC,QAAa,GAAG,MAAMb,GAAG,CAACc,OAAJ,CAC1Bb,gBAAgB,CAACG,cAAD,EAAiB;AAAEW,MAAAA,KAAK,EAAEP;AAAT,KAAjB,CADU,CAA5B;AAIA,UAAMQ,aAAa,GAAG,MAAMnB,UAAU,CAACQ,iBAAD,CAAtC;AAEAW,IAAAA,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CACTC,kBADJ,CACuB;AACnBC,MAAAA,SAAS,EAAEL,QAAQ,CAACM,IAAT,CAAcf;AADN,KADvB,EAIGgB,IAJH,CAIQ,UAAUC,MAAV,EAAuB;AAC3BtB,MAAAA,OAAO,CAACuB,KAAR,CAAcD,MAAM,CAACC,KAAP,CAAavB,OAA3B;AACD,KANH;AAOD,GArBD;;AAuBA,sBACE,QAAC,QAAD;AAAU,IAAA,MAAM,EAAEF,UAAU,CAACQ,iBAAD,CAA5B;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,EAAEE,SAAhC;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAEgB,QAAjB;AAA2B,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ;AAAlC;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA/BD;;KAAMlB,a;AAiCN,eAAeA,aAAf","sourcesContent":["import Icon from \"@ant-design/icons\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Button, message } from \"antd\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { processPayment } from \"../../../graphql/mutations\";\nimport { ReactComponent as IconLogo } from \"../../../images/stripe-brands.svg\";\n\nconst STRIPE_PUBLIC_KEY: string =\n  \"pk_test_51K6Lv8JfUhuzTQLsnTrk8sZTeap3i5f9QUCq8UlN4Rk0LRc77GbxppRAAqW5yl6RimUU1DSEymcAw4ioHnyAoCI000QFZV7fIs\";\n\nconst PaymentButton = () => {\n  const handlePay = async () => {\n    const payload = {\n      id: uuidv4(),\n      total: \"5\",\n      success_url: \"http://localhost:3000/results\",\n      cancel_url: \"http://localhost:3000/results\",\n    };\n\n    const response: any = await API.graphql(\n      graphqlOperation(processPayment, { input: payload })\n    );\n\n    const stripePromise = await loadStripe(STRIPE_PUBLIC_KEY);\n\n    stripePromise\n      ?.redirectToCheckout({\n        sessionId: response.data.processPayment,\n      })\n      .then(function (result: any) {\n        message.error(result.error.message);\n      });\n  };\n\n  return (\n    <Elements stripe={loadStripe(STRIPE_PUBLIC_KEY)}>\n      <Button type=\"primary\" onClick={handlePay}>\n        <Icon component={IconLogo} style={{ fontSize: 200 }} /> Pay with\n      </Button>\n    </Elements>\n  );\n};\n\nexport default PaymentButton;\n"]},"metadata":{},"sourceType":"module"}