{"ast":null,"code":"var _jsxFileName = \"/Users/farzanhaq/Desktop/PropertyPal/src/components/Screening/Confirmation/Confirmation.tsx\",\n    _s = $RefreshSig$();\n\nimport { LeftOutlined, RightOutlined } from \"@ant-design/icons\";\nimport { Button, Descriptions, Divider, Space, Typography } from \"antd\";\nimport { API, Auth, graphqlOperation } from \"aws-amplify\";\nimport { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { createScreening, updateScreening } from \"../../../graphql/mutations\";\nimport { listScreenings } from \"../../../graphql/queries\";\nimport { BuyerExperienceKind, BuyerPurposeKind } from \"../../../utils/enums\";\nimport { FormContext, FormStatusContext } from \"../../../utils/FormState\";\nimport { StyledButtonNavDiv, StyledScreeningConfirmationDiv } from \"../../Styles/Div.style\";\nimport { StyledPrompt } from \"../../Styles/Title.style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Item\n} = Descriptions;\n\nconst Confirmation = () => {\n  _s();\n\n  const {\n    formState\n  } = useContext(FormContext);\n  const {\n    currentStep,\n    setCurrentStep\n  } = useContext(FormStatusContext);\n  const history = useHistory();\n\n  const onFormSubmit = async () => {\n    try {\n      const {\n        attributes: {\n          email\n        }\n      } = await Auth.currentAuthenticatedUser();\n      const filter = {\n        user_email: {\n          eq: email\n        }\n      };\n      const screenings = await API.graphql({\n        query: listScreenings,\n        variables: {\n          filter: filter\n        }\n      });\n\n      if (screenings.data.listScreenings.items.length === 0) {\n        await API.graphql(graphqlOperation(createScreening, {\n          input: {\n            budget: formState.budget,\n            buyer_experience: formState.buyerExperience,\n            buyer_purpose: formState.buyerPurpose,\n            unit_premium_interest: formState.premiums,\n            num_bedrooms: formState.numBedrooms,\n            num_bathrooms: formState.numBathrooms,\n            user_email: email\n          }\n        }));\n      } else {\n        await API.graphql(graphqlOperation(updateScreening, {\n          input: {\n            id: screenings.data.listScreenings.items[0].id,\n            budget: formState.budget,\n            buyer_experience: formState.buyerExperience,\n            buyer_purpose: formState.buyerPurpose,\n            unit_premium_interest: formState.premiums,\n            num_bedrooms: formState.numBedrooms,\n            num_bathrooms: formState.numBathrooms,\n            user_email: email\n          }\n        }));\n      }\n\n      setCurrentStep(0);\n      history.push(\"/results\");\n    } catch (err) {\n      message.error(\"There was an error uploading the screening data. Please try again later.\");\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      children: /*#__PURE__*/_jsxDEV(StyledPrompt, {\n        level: 5,\n        children: \"Please Confirm Your Details...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledScreeningConfirmationDiv, {\n      children: [/*#__PURE__*/_jsxDEV(Descriptions, {\n        title: \"Experience\",\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          children: formState.buyerExperience === BuyerExperienceKind.FIRST_TIME ? \"I am looking to buy my first property\" : \"I have experience purchasing properties\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Descriptions, {\n        title: \"Purpose\",\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          children: formState.buyerPurpose === BuyerPurposeKind.OWNER ? \"I am looking for a property to live in\" : \"I am looking for an investment property\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Descriptions, {\n        title: \"Bedrooms\",\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          children: `${formState.numBathrooms.length === 0 ? \"Any\" : formState.numBedrooms.join(\", \")}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Descriptions, {\n        title: \"Bathrooms\",\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          children: `${formState.numBedrooms.length === 0 ? \"Any\" : formState.numBathrooms.join(\", \")}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Descriptions, {\n        title: \"Premiums\",\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          children: `${formState.premiums.length === 0 ? \"None\" : formState.premiums.join(\", \")}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Descriptions, {\n        title: \"Budget\",\n        children: /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          children: formState.budget[0] != null && formState.budget[1] != null ? `$${formState.budget[0].toString().replace(new RegExp(/\\B(?=(\\d{3})+(?!\\d))/g), \",\")} - $${formState.budget[1].toString().replace(new RegExp(/\\B(?=(\\d{3})+(?!\\d))/g), \",\")}` : \"I do not have a budget\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledButtonNavDiv, {\n      children: /*#__PURE__*/_jsxDEV(Space, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          shape: \"circle\",\n          size: \"large\",\n          icon: /*#__PURE__*/_jsxDEV(LeftOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 19\n          }, this),\n          onClick: () => setCurrentStep(currentStep - 1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onFormSubmit,\n          disabled: formState.buyerExperience === \"\" || formState.buyerPurpose === \"\" ? true : false,\n          type: \"primary\",\n          shape: \"circle\",\n          size: \"large\",\n          icon: /*#__PURE__*/_jsxDEV(RightOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 19\n          }, this),\n          htmlType: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Confirmation, \"hGTrLEnzK5SwDhIj9bnIhpbG4HY=\", false, function () {\n  return [useHistory];\n});\n\n_c = Confirmation;\nexport default Confirmation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Confirmation\");","map":{"version":3,"sources":["/Users/farzanhaq/Desktop/PropertyPal/src/components/Screening/Confirmation/Confirmation.tsx"],"names":["LeftOutlined","RightOutlined","Button","Descriptions","Divider","Space","Typography","API","Auth","graphqlOperation","useContext","useHistory","createScreening","updateScreening","listScreenings","BuyerExperienceKind","BuyerPurposeKind","FormContext","FormStatusContext","StyledButtonNavDiv","StyledScreeningConfirmationDiv","StyledPrompt","Item","Confirmation","formState","currentStep","setCurrentStep","history","onFormSubmit","attributes","email","currentAuthenticatedUser","filter","user_email","eq","screenings","graphql","query","variables","data","items","length","input","budget","buyer_experience","buyerExperience","buyer_purpose","buyerPurpose","unit_premium_interest","premiums","num_bedrooms","numBedrooms","num_bathrooms","numBathrooms","id","push","err","message","error","console","log","FIRST_TIME","OWNER","join","toString","replace","RegExp"],"mappings":";;;AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,mBAA5C;AACA,SAASC,MAAT,EAAiBC,YAAjB,EAA+BC,OAA/B,EAAwCC,KAAxC,EAA+CC,UAA/C,QAAiE,MAAjE;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,gBAApB,QAA4C,aAA5C;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,eAAT,EAA0BC,eAA1B,QAAiD,4BAAjD;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,SAASC,mBAAT,EAA8BC,gBAA9B,QAAsD,sBAAtD;AACA,SAASC,WAAT,EAAsBC,iBAAtB,QAA+C,0BAA/C;AACA,SACEC,kBADF,EAEEC,8BAFF,QAGO,wBAHP;AAIA,SAASC,YAAT,QAA6B,0BAA7B;;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAWnB,YAAjB;;AAEA,MAAMoB,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM;AAAEC,IAAAA;AAAF,MAAgBd,UAAU,CAACO,WAAD,CAAhC;AACA,QAAM;AAAEQ,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAkChB,UAAU,CAACQ,iBAAD,CAAlD;AACA,QAAMS,OAAO,GAAGhB,UAAU,EAA1B;;AAEA,QAAMiB,YAAY,GAAG,YAAY;AAC/B,QAAI;AACF,YAAM;AACJC,QAAAA,UAAU,EAAE;AAAEC,UAAAA;AAAF;AADR,UAGJ,MAAMtB,IAAI,CAACuB,wBAAL,EAHR;AAKA,YAAMC,MAIL,GAAG;AACFC,QAAAA,UAAU,EAAE;AACVC,UAAAA,EAAE,EAAEJ;AADM;AADV,OAJJ;AAUA,YAAMK,UAAe,GAAG,MAAM5B,GAAG,CAAC6B,OAAJ,CAAY;AACxCC,QAAAA,KAAK,EAAEvB,cADiC;AAExCwB,QAAAA,SAAS,EAAE;AAAEN,UAAAA,MAAM,EAAEA;AAAV;AAF6B,OAAZ,CAA9B;;AAKA,UAAIG,UAAU,CAACI,IAAX,CAAgBzB,cAAhB,CAA+B0B,KAA/B,CAAqCC,MAArC,KAAgD,CAApD,EAAuD;AACrD,cAAMlC,GAAG,CAAC6B,OAAJ,CACJ3B,gBAAgB,CAACG,eAAD,EAAkB;AAChC8B,UAAAA,KAAK,EAAE;AACLC,YAAAA,MAAM,EAAEnB,SAAS,CAACmB,MADb;AAELC,YAAAA,gBAAgB,EAAEpB,SAAS,CAACqB,eAFvB;AAGLC,YAAAA,aAAa,EAAEtB,SAAS,CAACuB,YAHpB;AAILC,YAAAA,qBAAqB,EAAExB,SAAS,CAACyB,QAJ5B;AAKLC,YAAAA,YAAY,EAAE1B,SAAS,CAAC2B,WALnB;AAMLC,YAAAA,aAAa,EAAE5B,SAAS,CAAC6B,YANpB;AAOLpB,YAAAA,UAAU,EAAEH;AAPP;AADyB,SAAlB,CADZ,CAAN;AAaD,OAdD,MAcO;AACL,cAAMvB,GAAG,CAAC6B,OAAJ,CACJ3B,gBAAgB,CAACI,eAAD,EAAkB;AAChC6B,UAAAA,KAAK,EAAE;AACLY,YAAAA,EAAE,EAAEnB,UAAU,CAACI,IAAX,CAAgBzB,cAAhB,CAA+B0B,KAA/B,CAAqC,CAArC,EAAwCc,EADvC;AAELX,YAAAA,MAAM,EAAEnB,SAAS,CAACmB,MAFb;AAGLC,YAAAA,gBAAgB,EAAEpB,SAAS,CAACqB,eAHvB;AAILC,YAAAA,aAAa,EAAEtB,SAAS,CAACuB,YAJpB;AAKLC,YAAAA,qBAAqB,EAAExB,SAAS,CAACyB,QAL5B;AAMLC,YAAAA,YAAY,EAAE1B,SAAS,CAAC2B,WANnB;AAOLC,YAAAA,aAAa,EAAE5B,SAAS,CAAC6B,YAPpB;AAQLpB,YAAAA,UAAU,EAAEH;AARP;AADyB,SAAlB,CADZ,CAAN;AAcD;;AAEDJ,MAAAA,cAAc,CAAC,CAAD,CAAd;AACAC,MAAAA,OAAO,CAAC4B,IAAR,CAAa,UAAb;AACD,KAtDD,CAsDE,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAc,0EAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACD;AACF,GA3DD;;AA6DA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAA,6BACE,QAAC,YAAD;AAAc,QAAA,KAAK,EAAE,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,8BAAD;AAAA,8BACE,QAAC,YAAD;AAAc,QAAA,KAAK,EAAC,YAApB;AAAA,+BACE,QAAC,IAAD;AAAA,oBACGhC,SAAS,CAACqB,eAAV,KAA8B9B,mBAAmB,CAAC8C,UAAlD,GACG,uCADH,GAEG;AAHN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cARF,eASE,QAAC,YAAD;AAAc,QAAA,KAAK,EAAC,SAApB;AAAA,+BACE,QAAC,IAAD;AAAA,oBACGrC,SAAS,CAACuB,YAAV,KAA2B/B,gBAAgB,CAAC8C,KAA5C,GACG,wCADH,GAEG;AAHN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATF,eAgBE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAhBF,eAiBE,QAAC,YAAD;AAAc,QAAA,KAAK,EAAC,UAApB;AAAA,+BACE,QAAC,IAAD;AAAA,oBAAQ,GACNtC,SAAS,CAAC6B,YAAV,CAAuBZ,MAAvB,KAAkC,CAAlC,GACI,KADJ,GAEIjB,SAAS,CAAC2B,WAAV,CAAsBY,IAAtB,CAA2B,IAA3B,CACL;AAJD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAjBF,eAwBE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAxBF,eAyBE,QAAC,YAAD;AAAc,QAAA,KAAK,EAAC,WAApB;AAAA,+BACE,QAAC,IAAD;AAAA,oBAAQ,GACNvC,SAAS,CAAC2B,WAAV,CAAsBV,MAAtB,KAAiC,CAAjC,GACI,KADJ,GAEIjB,SAAS,CAAC6B,YAAV,CAAuBU,IAAvB,CAA4B,IAA5B,CACL;AAJD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAzBF,eAgCE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAhCF,eAiCE,QAAC,YAAD;AAAc,QAAA,KAAK,EAAC,UAApB;AAAA,+BACE,QAAC,IAAD;AAAA,oBAAQ,GACNvC,SAAS,CAACyB,QAAV,CAAmBR,MAAnB,KAA8B,CAA9B,GACI,MADJ,GAEIjB,SAAS,CAACyB,QAAV,CAAmBc,IAAnB,CAAwB,IAAxB,CACL;AAJD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAjCF,eAwCE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAxCF,eAyCE,QAAC,YAAD;AAAc,QAAA,KAAK,EAAC,QAApB;AAAA,+BACE,QAAC,YAAD,CAAc,IAAd;AAAA,oBACGvC,SAAS,CAACmB,MAAV,CAAiB,CAAjB,KAAuB,IAAvB,IAA+BnB,SAAS,CAACmB,MAAV,CAAiB,CAAjB,KAAuB,IAAtD,GACI,IAAGnB,SAAS,CAACmB,MAAV,CAAiB,CAAjB,EACDqB,QADC,GAEDC,OAFC,CAGA,IAAIC,MAAJ,CAAW,uBAAX,CAHA,EAIA,GAJA,CAKA,OAAM1C,SAAS,CAACmB,MAAV,CAAiB,CAAjB,EACPqB,QADO,GAEPC,OAFO,CAEC,IAAIC,MAAJ,CAAW,uBAAX,CAFD,EAEsC,GAFtC,CAE2C,EARxD,GASG;AAVN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAzCF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eA6DE;AAAA;AAAA;AAAA;AAAA,YA7DF,eA8DE;AAAA;AAAA;AAAA;AAAA,YA9DF,eA+DE,QAAC,kBAAD;AAAA,6BACE,QAAC,KAAD;AAAA,gCACE,QAAC,MAAD;AACE,UAAA,IAAI,EAAC,SADP;AAEE,UAAA,KAAK,EAAC,QAFR;AAGE,UAAA,IAAI,EAAC,OAHP;AAIE,UAAA,IAAI,eAAE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,kBAJR;AAKE,UAAA,OAAO,EAAE,MAAMxC,cAAc,CAACD,WAAW,GAAG,CAAf;AAL/B;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,MAAD;AACE,UAAA,OAAO,EAAEG,YADX;AAEE,UAAA,QAAQ,EACNJ,SAAS,CAACqB,eAAV,KAA8B,EAA9B,IAAoCrB,SAAS,CAACuB,YAAV,KAA2B,EAA/D,GACI,IADJ,GAEI,KALR;AAOE,UAAA,IAAI,EAAC,SAPP;AAQE,UAAA,KAAK,EAAC,QARR;AASE,UAAA,IAAI,EAAC,OATP;AAUE,UAAA,IAAI,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,kBAVR;AAWE,UAAA,QAAQ,EAAC;AAXX;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA/DF;AAAA,kBADF;AA0FD,CA5JD;;GAAMxB,Y;UAGYZ,U;;;KAHZY,Y;AA8JN,eAAeA,YAAf","sourcesContent":["import { LeftOutlined, RightOutlined } from \"@ant-design/icons\";\nimport { Button, Descriptions, Divider, Space, Typography } from \"antd\";\nimport { API, Auth, graphqlOperation } from \"aws-amplify\";\nimport { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { createScreening, updateScreening } from \"../../../graphql/mutations\";\nimport { listScreenings } from \"../../../graphql/queries\";\nimport { BuyerExperienceKind, BuyerPurposeKind } from \"../../../utils/enums\";\nimport { FormContext, FormStatusContext } from \"../../../utils/FormState\";\nimport {\n  StyledButtonNavDiv,\n  StyledScreeningConfirmationDiv\n} from \"../../Styles/Div.style\";\nimport { StyledPrompt } from \"../../Styles/Title.style\";\n\nconst { Item } = Descriptions;\n\nconst Confirmation = () => {\n  const { formState } = useContext(FormContext);\n  const { currentStep, setCurrentStep } = useContext(FormStatusContext);\n  const history = useHistory();\n\n  const onFormSubmit = async () => {\n    try {\n      const {\n        attributes: { email },\n      }: { attributes: { email: string } } =\n        await Auth.currentAuthenticatedUser();\n\n      const filter: {\n        user_email: {\n          eq: string;\n        };\n      } = {\n        user_email: {\n          eq: email,\n        },\n      };\n\n      const screenings: any = await API.graphql({\n        query: listScreenings,\n        variables: { filter: filter },\n      });\n\n      if (screenings.data.listScreenings.items.length === 0) {\n        await API.graphql(\n          graphqlOperation(createScreening, {\n            input: {\n              budget: formState.budget,\n              buyer_experience: formState.buyerExperience,\n              buyer_purpose: formState.buyerPurpose,\n              unit_premium_interest: formState.premiums,\n              num_bedrooms: formState.numBedrooms,\n              num_bathrooms: formState.numBathrooms,\n              user_email: email,\n            },\n          })\n        );\n      } else {\n        await API.graphql(\n          graphqlOperation(updateScreening, {\n            input: {\n              id: screenings.data.listScreenings.items[0].id,\n              budget: formState.budget,\n              buyer_experience: formState.buyerExperience,\n              buyer_purpose: formState.buyerPurpose,\n              unit_premium_interest: formState.premiums,\n              num_bedrooms: formState.numBedrooms,\n              num_bathrooms: formState.numBathrooms,\n              user_email: email,\n            },\n          })\n        );\n      }\n\n      setCurrentStep(0);\n      history.push(\"/results\");\n    } catch (err) {\n      message.error(\"There was an error uploading the screening data. Please try again later.\")\n      console.log(err);\n    }\n  };\n\n  return (\n    <>\n      <Typography>\n        <StyledPrompt level={5}>Please Confirm Your Details...</StyledPrompt>\n      </Typography>\n      <br />\n      <StyledScreeningConfirmationDiv>\n        <Descriptions title=\"Experience\">\n          <Item>\n            {formState.buyerExperience === BuyerExperienceKind.FIRST_TIME\n              ? \"I am looking to buy my first property\"\n              : \"I have experience purchasing properties\"}\n          </Item>\n        </Descriptions>\n        <Divider />\n        <Descriptions title=\"Purpose\">\n          <Item>\n            {formState.buyerPurpose === BuyerPurposeKind.OWNER\n              ? \"I am looking for a property to live in\"\n              : \"I am looking for an investment property\"}\n          </Item>\n        </Descriptions>\n        <Divider />\n        <Descriptions title=\"Bedrooms\">\n          <Item>{`${\n            formState.numBathrooms.length === 0\n              ? \"Any\"\n              : formState.numBedrooms.join(\", \")\n          }`}</Item>\n        </Descriptions>\n        <Divider />\n        <Descriptions title=\"Bathrooms\">\n          <Item>{`${\n            formState.numBedrooms.length === 0\n              ? \"Any\"\n              : formState.numBathrooms.join(\", \")\n          }`}</Item>\n        </Descriptions>\n        <Divider />\n        <Descriptions title=\"Premiums\">\n          <Item>{`${\n            formState.premiums.length === 0\n              ? \"None\"\n              : formState.premiums.join(\", \")\n          }`}</Item>\n        </Descriptions>\n        <Divider />\n        <Descriptions title=\"Budget\">\n          <Descriptions.Item>\n            {formState.budget[0] != null && formState.budget[1] != null\n              ? `$${formState.budget[0]\n                  .toString()\n                  .replace(\n                    new RegExp(/\\B(?=(\\d{3})+(?!\\d))/g),\n                    \",\"\n                  )} - $${formState.budget[1]\n                  .toString()\n                  .replace(new RegExp(/\\B(?=(\\d{3})+(?!\\d))/g), \",\")}`\n              : \"I do not have a budget\"}\n          </Descriptions.Item>\n        </Descriptions>\n      </StyledScreeningConfirmationDiv>\n      <br />\n      <br />\n      <StyledButtonNavDiv>\n        <Space>\n          <Button\n            type=\"primary\"\n            shape=\"circle\"\n            size=\"large\"\n            icon={<LeftOutlined />}\n            onClick={() => setCurrentStep(currentStep - 1)}\n          />\n          <Button\n            onClick={onFormSubmit}\n            disabled={\n              formState.buyerExperience === \"\" || formState.buyerPurpose === \"\"\n                ? true\n                : false\n            }\n            type=\"primary\"\n            shape=\"circle\"\n            size=\"large\"\n            icon={<RightOutlined />}\n            htmlType=\"submit\"\n          />\n        </Space>\n      </StyledButtonNavDiv>\n    </>\n  );\n};\n\nexport default Confirmation;\n"]},"metadata":{},"sourceType":"module"}