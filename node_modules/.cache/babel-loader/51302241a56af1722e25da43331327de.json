{"ast":null,"code":"var _jsxFileName = \"/Users/farzanhaq/Desktop/PropertyPal/src/components/Results/Result/Result.tsx\",\n    _s = $RefreshSig$();\n\nimport { Tabs, Image, Spin } from \"antd\";\nimport unitMedia1 from \"../../../images/unitMedia1.jpeg\";\nimport unitMedia2 from \"../../../images/unitMedia2.jpeg\";\nimport unitMedia3 from \"../../../images/unitMedia3.jpeg\";\nimport unitMedia4 from \"../../../images/unitMedia4.jpeg\";\nimport viewsMedia1 from \"../../../images/viewsMedia1.jpeg\";\nimport viewsMedia2 from \"../../../images/viewsMedia2.jpeg\";\nimport viewsMedia3 from \"../../../images/viewsMedia3.jpeg\";\nimport viewsMedia4 from \"../../../images/viewsMedia4.jpeg\";\nimport neighbourhoodMedia1 from \"../../../images/neighbourhoodMedia1.jpeg\";\nimport neighbourhoodMedia2 from \"../../../images/neighbourhoodMedia2.jpeg\";\nimport neighbourhoodMedia3 from \"../../../images/neighbourhoodMedia3.jpeg\";\nimport floorplanMedia1 from \"../../../images/floorplanMedia1.png\";\nimport floorplanMedia2 from \"../../../images/floorplanMedia2.png\";\nimport { useParams } from \"react-router-dom\";\nimport { StyledContentDiv, StyledDiv } from \"../../Styles/Div.style\";\nimport { useEffect, useState } from \"react\";\nimport { API } from \"aws-amplify\";\nimport { listUnits } from \"../../../graphql/queries\";\nimport { StyledLoadingIcon } from \"../../Styles/LoadingOutlined.style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  TabPane\n} = Tabs;\nconst {\n  PreviewGroup\n} = Image;\nconst unitImages = [unitMedia1, unitMedia2, unitMedia3, unitMedia4];\nconst viewsImages = [viewsMedia1, viewsMedia2, viewsMedia3, viewsMedia4];\nconst neighbourHoodImages = [neighbourhoodMedia1, neighbourhoodMedia2, neighbourhoodMedia3];\nconst floorplanImages = [floorplanMedia1, floorplanMedia2];\n\nconst loadingIcon = /*#__PURE__*/_jsxDEV(StyledLoadingIcon, {\n  spin: true\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 64,\n  columnNumber: 21\n}, this);\n\nconst Result = () => {\n  _s();\n\n  const [unit, setUnit] = useState();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    getUnit();\n  }, []);\n\n  const getUnit = async () => {\n    try {\n      const filter = {\n        id: {\n          eq: id\n        }\n      };\n      const selectedUnit = await API.graphql({\n        query: listUnits,\n        variables: {\n          filter: filter\n        }\n      });\n      const {\n        unit_number,\n        price,\n        square_ft,\n        beds,\n        baths,\n        occupancy_date\n      } = selectedUnit.data.listUnits.items[0];\n      const selectedUnitObj = {\n        unit_number: unit_number,\n        price: price,\n        square_ft: square_ft,\n        beds: beds,\n        baths: baths,\n        occupancy_date: occupancy_date\n      };\n      console.log(selectedUnitObj);\n      setUnit(selectedUnitObj);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  /*const unitData = {\n    price: \"$2,500,000\",\n    square_ft: \"2,500 SQFT\",\n    beds: \"2 Beds\",\n    baths: \"2 Baths\",\n    occupancy: \"2022 Occupancy\",\n    floor: \"Floor 29\",\n  };*/\n\n\n  const imagePaneData = [{\n    tabName: \"Renderings\",\n    images: unitImages,\n    index: \"2\"\n  }, {\n    tabName: \"Views\",\n    images: viewsImages,\n    index: \"3\"\n  }, {\n    tabName: \"Neighbourhood\",\n    images: neighbourHoodImages,\n    index: \"4\"\n  }, {\n    tabName: \"Floorplan\",\n    images: floorplanImages,\n    index: \"5\"\n  }];\n  return /*#__PURE__*/_jsxDEV(StyledDiv, {\n    children: /*#__PURE__*/_jsxDEV(StyledContentDiv, {\n      children: /*#__PURE__*/_jsxDEV(Spin, {\n        indicator: loadingIcon,\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Result, \"FfZz+UQb/l8kTXQgrW3abSSARLE=\", false, function () {\n  return [useParams];\n});\n\n_c = Result;\nexport default Result;\n\nvar _c;\n\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"sources":["/Users/farzanhaq/Desktop/PropertyPal/src/components/Results/Result/Result.tsx"],"names":["Tabs","Image","Spin","unitMedia1","unitMedia2","unitMedia3","unitMedia4","viewsMedia1","viewsMedia2","viewsMedia3","viewsMedia4","neighbourhoodMedia1","neighbourhoodMedia2","neighbourhoodMedia3","floorplanMedia1","floorplanMedia2","useParams","StyledContentDiv","StyledDiv","useEffect","useState","API","listUnits","StyledLoadingIcon","TabPane","PreviewGroup","unitImages","viewsImages","neighbourHoodImages","floorplanImages","loadingIcon","Result","unit","setUnit","id","getUnit","filter","eq","selectedUnit","graphql","query","variables","unit_number","price","square_ft","beds","baths","occupancy_date","data","items","selectedUnitObj","console","log","err","imagePaneData","tabName","images","index"],"mappings":"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","sourcesContent":["import {\n  Divider,\n  Typography,\n  Tabs,\n  Row,\n  Col,\n  Statistic,\n  Card,\n  Image,\n  Spin,\n} from \"antd\";\nimport unitMedia1 from \"../../../images/unitMedia1.jpeg\";\nimport unitMedia2 from \"../../../images/unitMedia2.jpeg\";\nimport unitMedia3 from \"../../../images/unitMedia3.jpeg\";\nimport unitMedia4 from \"../../../images/unitMedia4.jpeg\";\nimport viewsMedia1 from \"../../../images/viewsMedia1.jpeg\";\nimport viewsMedia2 from \"../../../images/viewsMedia2.jpeg\";\nimport viewsMedia3 from \"../../../images/viewsMedia3.jpeg\";\nimport viewsMedia4 from \"../../../images/viewsMedia4.jpeg\";\nimport neighbourhoodMedia1 from \"../../../images/neighbourhoodMedia1.jpeg\";\nimport neighbourhoodMedia2 from \"../../../images/neighbourhoodMedia2.jpeg\";\nimport neighbourhoodMedia3 from \"../../../images/neighbourhoodMedia3.jpeg\";\nimport floorplanMedia1 from \"../../../images/floorplanMedia1.png\";\nimport floorplanMedia2 from \"../../../images/floorplanMedia2.png\";\nimport { Link, useParams } from \"react-router-dom\";\nimport {\n  StyledContentDiv,\n  StyledDiv,\n  StyledResultBookDiv,\n  StyledResultFeesDiv,\n  StyledResultGalleryDiv,\n} from \"../../Styles/Div.style\";\nimport { StyledTitle } from \"../../Styles/Title.style\";\nimport { StyledResultParagraph } from \"../../Styles/Paragraph.style\";\nimport { StyledResultFeesRow } from \"../../Styles/Row.style\";\nimport { StyledResultBookButton } from \"../../Styles/Button.style\";\nimport { ArrowRightOutlined } from \"@ant-design/icons\";\nimport { useEffect, useState } from \"react\";\nimport { API } from \"aws-amplify\";\nimport { listUnits } from \"../../../graphql/queries\";\nimport { StyledLoadingIcon } from \"../../Styles/LoadingOutlined.style\";\n\nconst { TabPane } = Tabs;\nconst { PreviewGroup } = Image;\n\nconst unitImages = [unitMedia1, unitMedia2, unitMedia3, unitMedia4];\nconst viewsImages = [viewsMedia1, viewsMedia2, viewsMedia3, viewsMedia4];\nconst neighbourHoodImages = [\n  neighbourhoodMedia1,\n  neighbourhoodMedia2,\n  neighbourhoodMedia3,\n];\nconst floorplanImages = [floorplanMedia1, floorplanMedia2];\n\ninterface Unit {\n  unit_number: number;\n  price: string;\n  square_ft: number;\n  beds: number;\n  baths: number;\n  occupancy_date: number;\n}\n\nconst loadingIcon = <StyledLoadingIcon spin />;\n\nconst Result = () => {\n  const [unit, setUnit] = useState<Unit>();\n  const { id } = useParams<{ id: string }>();\n\n  useEffect(() => {\n    getUnit();\n  }, []);\n\n  const getUnit = async () => {\n    try {\n      const filter = {\n        id: {\n          eq: id,\n        },\n      };\n\n      const selectedUnit: any = await API.graphql({\n        query: listUnits,\n        variables: { filter: filter },\n      });\n\n      const { unit_number, price, square_ft, beds, baths, occupancy_date } =\n        selectedUnit.data.listUnits.items[0];\n\n      const selectedUnitObj: Unit = {\n        unit_number: unit_number,\n        price: price,\n        square_ft: square_ft,\n        beds: beds,\n        baths: baths,\n        occupancy_date: occupancy_date,\n      };\n\n      console.log(selectedUnitObj);\n\n      setUnit(selectedUnitObj);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  /*const unitData = {\n    price: \"$2,500,000\",\n    square_ft: \"2,500 SQFT\",\n    beds: \"2 Beds\",\n    baths: \"2 Baths\",\n    occupancy: \"2022 Occupancy\",\n    floor: \"Floor 29\",\n  };*/\n\n  const imagePaneData = [\n    {\n      tabName: \"Renderings\",\n      images: unitImages,\n      index: \"2\",\n    },\n    {\n      tabName: \"Views\",\n      images: viewsImages,\n      index: \"3\",\n    },\n    {\n      tabName: \"Neighbourhood\",\n      images: neighbourHoodImages,\n      index: \"4\",\n    },\n    {\n      tabName: \"Floorplan\",\n      images: floorplanImages,\n      index: \"5\",\n    },\n  ];\n\n  return (\n    <StyledDiv>\n      \n        <StyledContentDiv>\n          <Spin indicator={loadingIcon} size=\"large\" />\n        </StyledContentDiv>\n      \n    </StyledDiv>\n  );\n};\n\nexport default Result;\n"]},"metadata":{},"sourceType":"module"}