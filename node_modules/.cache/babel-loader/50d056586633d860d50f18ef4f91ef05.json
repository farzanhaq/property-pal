{"ast":null,"code":"var _jsxFileName = \"/Users/farzanhaq/Desktop/PropertyPal/src/components/Authentication/SignUp/SignUp.tsx\",\n    _s = $RefreshSig$();\n\nimport { Alert, Button, Checkbox, Divider, Form, Input, Select, Typography } from \"antd\";\nimport { Auth } from \"aws-amplify\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { StyledContentDiv, StyledDiv } from \"../../Styles/Div.style\";\nimport { StyledAuthenticationForm } from \"../../Styles/Form.style\";\nimport { StyledTitle } from \"../../Styles/Title.style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst {\n  Item\n} = Form;\nconst {\n  Password\n} = Input;\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 8\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 16,\n      offset: 8\n    }\n  }\n};\n\nconst SignUp = () => {\n  _s();\n\n  const [showAlert, setShowAlert] = useState(false);\n  const [form] = Form.useForm();\n  const history = useHistory();\n\n  const onSignUp = async values => {\n    try {\n      setShowAlert(false);\n      await Auth.signUp({\n        username: values.email,\n        password: values.password,\n        attributes: {\n          given_name: values.givenName,\n          family_name: values.familyName,\n          gender: values.gender,\n          phone_number: [\"+\", values.prefix, values.phoneNumber].join(\"\")\n        }\n      });\n      history.push(\"/verification\");\n    } catch (error) {\n      setShowAlert(true);\n    }\n  };\n\n  const prefixSelector = /*#__PURE__*/_jsxDEV(Item, {\n    name: \"prefix\",\n    noStyle: true,\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      style: {\n        width: 70\n      },\n      children: /*#__PURE__*/_jsxDEV(Option, {\n        value: \"1\",\n        children: \"+1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(StyledDiv, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      children: /*#__PURE__*/_jsxDEV(StyledTitle, {\n        level: 2,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), showAlert && /*#__PURE__*/_jsxDEV(Alert, {\n      message: \"There was an error signing up. Please try again.\",\n      type: \"error\",\n      showIcon: true,\n      closable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(StyledContentDiv, {\n      children: /*#__PURE__*/_jsxDEV(StyledAuthenticationForm, { ...formItemLayout,\n        form: form,\n        name: \"register\",\n        onFinish: onSignUp,\n        initialValues: {\n          prefix: \"1\"\n        },\n        scrollToFirstError: true,\n        children: [/*#__PURE__*/_jsxDEV(Item, {\n          name: \"givenName\",\n          label: \"Given Name\",\n          rules: [{\n            required: true,\n            message: \"Please enter your given name\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Item, {\n          name: \"familyName\",\n          label: \"Family Name\",\n          rules: [{\n            required: true,\n            message: \"Please enter your family name\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Item, {\n          name: \"email\",\n          label: \"E-mail\",\n          rules: [{\n            type: \"email\",\n            message: \"The input is not a valid email!\"\n          }, {\n            required: true,\n            message: \"Please enter your email\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Item, {\n          name: \"password\",\n          label: \"Password\",\n          rules: [{\n            required: true,\n            message: \"Please enter your password\"\n          }],\n          hasFeedback: true,\n          children: /*#__PURE__*/_jsxDEV(Password, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Item, {\n          name: \"confirm\",\n          label: \"Confirm Password\",\n          dependencies: [\"password\"],\n          hasFeedback: true,\n          rules: [{\n            required: true,\n            message: \"Please confirm your password\"\n          }, ({\n            getFieldValue\n          }) => ({\n            validator(_, value) {\n              if (!value || getFieldValue(\"password\") === value) {\n                return Promise.resolve();\n              }\n\n              return Promise.reject(new Error(\"The passwords you have entered do not match\"));\n            }\n\n          })],\n          children: /*#__PURE__*/_jsxDEV(Password, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Item, {\n          name: \"phoneNumber\",\n          label: \"Phone Number\",\n          rules: [{\n            required: true,\n            message: \"Please enter your phone number\"\n          }, ({\n            getFieldValue\n          }) => ({\n            validator(_, value) {\n              if (!value || getFieldValue(\"phoneNumber\").length === 10 && !isNaN(getFieldValue(\"phoneNumber\")) && !isNaN(parseFloat(getFieldValue(\"phoneNumber\")))) {\n                return Promise.resolve();\n              }\n\n              return Promise.reject(new Error(\"The phone number you have entered is invalid\"));\n            }\n\n          })],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            addonBefore: prefixSelector,\n            style: {\n              width: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Item, {\n          name: \"gender\",\n          label: \"Gender\",\n          rules: [{\n            required: true,\n            message: \"Please select your gender\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Select your gender\",\n            children: [/*#__PURE__*/_jsxDEV(Option, {\n              value: \"male\",\n              children: \"Male\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"female\",\n              children: \"Female\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"other\",\n              children: \"Other\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Item, {\n          name: \"agreement\",\n          valuePropName: \"checked\",\n          rules: [{\n            validator: (_, value) => value ? Promise.resolve() : Promise.reject(new Error(\"Please accept the agreement\"))\n          }],\n          ...tailFormItemLayout,\n          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n            children: [\"I have read the \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/\",\n              children: \"agreement\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Item, { ...tailFormItemLayout,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUp, \"43oawEeovhntO95n83BgCySG2Gg=\", false, function () {\n  return [Form.useForm, useHistory];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/farzanhaq/Desktop/PropertyPal/src/components/Authentication/SignUp/SignUp.tsx"],"names":["Alert","Button","Checkbox","Divider","Form","Input","Select","Typography","Auth","useState","useHistory","StyledContentDiv","StyledDiv","StyledAuthenticationForm","StyledTitle","Option","Item","Password","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","SignUp","showAlert","setShowAlert","form","useForm","history","onSignUp","values","signUp","username","email","password","attributes","given_name","givenName","family_name","familyName","gender","phone_number","prefix","phoneNumber","join","push","error","prefixSelector","width","required","message","type","getFieldValue","validator","_","value","Promise","resolve","reject","Error","length","isNaN","parseFloat"],"mappings":"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","sourcesContent":["import {\n  Alert,\n  Button,\n  Checkbox,\n  Divider,\n  Form,\n  Input,\n  Select,\n  Typography\n} from \"antd\";\nimport { Auth } from \"aws-amplify\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { StyledContentDiv, StyledDiv } from \"../../Styles/Div.style\";\nimport { StyledAuthenticationForm } from \"../../Styles/Form.style\";\nimport { StyledTitle } from \"../../Styles/Title.style\";\n\nconst { Option } = Select;\nconst { Item } = Form;\nconst { Password } = Input;\n\nconst formItemLayout: {\n  labelCol: {\n    xs: {\n      span: number;\n    };\n    sm: {\n      span: number;\n    };\n  };\n  wrapperCol: {\n    xs: {\n      span: number;\n    };\n    sm: {\n      span: number;\n    };\n  };\n} = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\n\nconst tailFormItemLayout: {\n  wrapperCol: {\n    xs: {\n      span: number;\n      offset: number;\n    };\n    sm: {\n      span: number;\n      offset: number;\n    };\n  };\n} = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nconst SignUp = () => {\n  const [showAlert, setShowAlert] = useState<boolean>(false);\n  const [form] = Form.useForm();\n  const history = useHistory();\n\n  const onSignUp = async (values: any) => {\n    try {\n      setShowAlert(false);\n      await Auth.signUp({\n        username: values.email,\n        password: values.password,\n        attributes: {\n          given_name: values.givenName,\n          family_name: values.familyName,\n          gender: values.gender,\n          phone_number: [\"+\", values.prefix, values.phoneNumber].join(\"\"),\n        },\n      });\n      history.push(\"/verification\");\n    } catch (error) {\n      setShowAlert(true);\n    }\n  };\n\n  const prefixSelector = (\n    <Item name=\"prefix\" noStyle>\n      <Select style={{ width: 70 }}>\n        <Option value=\"1\">+1</Option>\n      </Select>\n    </Item>\n  );\n\n  return (\n    <StyledDiv>\n      <Typography>\n        <StyledTitle level={2}>Sign Up</StyledTitle>\n      </Typography>\n      <Divider />\n      {showAlert && (\n        <Alert\n          message=\"There was an error signing up. Please try again.\"\n          type=\"error\"\n          showIcon\n          closable\n        />\n      )}\n      <StyledContentDiv>\n        <StyledAuthenticationForm\n          {...formItemLayout}\n          form={form}\n          name=\"register\"\n          onFinish={onSignUp}\n          initialValues={{\n            prefix: \"1\",\n          }}\n          scrollToFirstError\n        >\n          <Item\n            name=\"givenName\"\n            label=\"Given Name\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter your given name\",\n              },\n            ]}\n          >\n            <Input />\n          </Item>\n          <Item\n            name=\"familyName\"\n            label=\"Family Name\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter your family name\",\n              },\n            ]}\n          >\n            <Input />\n          </Item>\n          <Item\n            name=\"email\"\n            label=\"E-mail\"\n            rules={[\n              {\n                type: \"email\",\n                message: \"The input is not a valid email!\",\n              },\n              {\n                required: true,\n                message: \"Please enter your email\",\n              },\n            ]}\n          >\n            <Input />\n          </Item>\n          <Item\n            name=\"password\"\n            label=\"Password\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter your password\",\n              },\n            ]}\n            hasFeedback\n          >\n            <Password />\n          </Item>\n          <Item\n            name=\"confirm\"\n            label=\"Confirm Password\"\n            dependencies={[\"password\"]}\n            hasFeedback\n            rules={[\n              {\n                required: true,\n                message: \"Please confirm your password\",\n              },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value || getFieldValue(\"password\") === value) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(\n                    new Error(\"The passwords you have entered do not match\")\n                  );\n                },\n              }),\n            ]}\n          >\n            <Password />\n          </Item>\n          <Item\n            name=\"phoneNumber\"\n            label=\"Phone Number\"\n            rules={[\n              { required: true, message: \"Please enter your phone number\" },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (\n                    !value ||\n                    (getFieldValue(\"phoneNumber\").length === 10 &&\n                      !isNaN(getFieldValue(\"phoneNumber\")) &&\n                      !isNaN(parseFloat(getFieldValue(\"phoneNumber\"))))\n                  ) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(\n                    new Error(\"The phone number you have entered is invalid\")\n                  );\n                },\n              }),\n            ]}\n          >\n            <Input addonBefore={prefixSelector} style={{ width: \"100%\" }} />\n          </Item>\n          <Item\n            name=\"gender\"\n            label=\"Gender\"\n            rules={[{ required: true, message: \"Please select your gender\" }]}\n          >\n            <Select placeholder=\"Select your gender\">\n              <Option value=\"male\">Male</Option>\n              <Option value=\"female\">Female</Option>\n              <Option value=\"other\">Other</Option>\n            </Select>\n          </Item>\n          <Item\n            name=\"agreement\"\n            valuePropName=\"checked\"\n            rules={[\n              {\n                validator: (_, value) =>\n                  value\n                    ? Promise.resolve()\n                    : Promise.reject(new Error(\"Please accept the agreement\")),\n              },\n            ]}\n            {...tailFormItemLayout}\n          >\n            <Checkbox>\n              I have read the <a href=\"/\">agreement</a>\n            </Checkbox>\n          </Item>\n          <Item {...tailFormItemLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Register\n            </Button>\n          </Item>\n        </StyledAuthenticationForm>\n      </StyledContentDiv>\n    </StyledDiv>\n  );\n};\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}