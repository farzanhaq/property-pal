{"ast":null,"code":"var _jsxFileName = \"/Users/farzanhaq/Desktop/PropertyPal/src/components/Results/Results.tsx\",\n    _s = $RefreshSig$();\n\nimport { FilterOutlined } from \"@ant-design/icons\";\nimport { Divider, Table, Typography, message, Switch } from \"antd\";\nimport { FormContext } from \"../../utils/FormState\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { BathroomsKind, BedroomsKind, BudgetKind } from \"../../utils/enums\";\nimport { useHistory } from \"react-router-dom\";\nimport { StyledSubtitle, StyledTitle } from \"../Styles/Title.style\";\nimport { StyledDiv } from \"../Styles/Div.style\";\nimport API, { graphqlOperation } from \"@aws-amplify/api\";\nimport { listScreenings, listUnits } from \"../../graphql/queries\";\nimport ResultTable from \"./Result/ResultTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Column\n} = Table;\n\nconst Results = () => {\n  _s();\n\n  const [units, setUnits] = useState([]);\n  const [screening, setScreening] = useState();\n  const [enableFilters, setEnableFilters] = useState(true);\n  const [enableRefresh, setEnableRefresh] = useState(true);\n  const {\n    formState\n  } = useContext(FormContext);\n  const history = useHistory();\n  useEffect(() => {\n    message.info({\n      content: \"Tip: Click on the filter icon to narrow your results\",\n      icon: /*#__PURE__*/_jsxDEV(FilterOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this),\n      duration: 5\n    });\n    getUnits();\n    getScreening();\n  }, []);\n\n  const getUnits = async () => {\n    try {\n      const allUnits = await API.graphql(graphqlOperation(listUnits));\n      setUnits(allUnits.data.listUnits.items);\n    } catch (err) {\n      console.log(\"error getting units: \" + err);\n    }\n  };\n\n  const getScreening = async () => {\n    try {\n      const screeningData = await API.graphql(graphqlOperation(listScreenings));\n      setScreening(screeningData.data.listScreenings.items[0]);\n    } catch (err) {\n      console.log(\"error getting screening data: \" + err);\n    }\n  };\n\n  const onFilterChange = () => {\n    setEnableFilters(!enableFilters);\n    setEnableRefresh(true);\n  };\n\n  const onLoading = () => {\n    if (enableRefresh) {\n      return true;\n    }\n\n    if (screening) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const getDefaultNumBedrooms = () => {\n    const numBedrooms = screening === null || screening === void 0 ? void 0 : screening.num_bedrooms.map(bedroom => {\n      switch (bedroom) {\n        case BedroomsKind.BACHELOR:\n          return BedroomsKind.BACHELOR.toString();\n\n        case BedroomsKind.ONE_BED:\n          return BedroomsKind.ONE_BED.toString();\n\n        case BedroomsKind.ONE_BED_PLUS_DEN:\n          return BedroomsKind.ONE_BED_PLUS_DEN.toString();\n\n        case BedroomsKind.TWO_BED:\n          return BedroomsKind.TWO_BED.toString();\n\n        case BedroomsKind.TWO_BED_PLUS_DEN:\n          return BedroomsKind.TWO_BED_PLUS_DEN.toString();\n\n        default:\n          return \"\";\n      }\n    });\n    return numBedrooms;\n  };\n\n  const getDefaultNumBathrooms = () => {\n    const numBathrooms = screening === null || screening === void 0 ? void 0 : screening.num_bathrooms.map(bathroom => {\n      switch (bathroom) {\n        case BathroomsKind.ONE_BATH:\n          return BathroomsKind.ONE_BATH.toString();\n\n        case BathroomsKind.TWO_BATH:\n          return BathroomsKind.TWO_BATH.toString();\n\n        case BathroomsKind.THREE_BATH:\n          return BathroomsKind.THREE_BATH.toString();\n\n        default:\n          return \"\";\n      }\n    });\n    return numBathrooms;\n  };\n\n  const getDefaultPrice = () => {\n    const prices = [BudgetKind.ZERO, BudgetKind.ONE_MILLION, BudgetKind.TWO_MILLION, BudgetKind.THREE_MILLION, BudgetKind.FOUR_MILLION].filter(price => {\n      return price >= formState.budget[0] && price < formState.budget[1];\n    }).map(price => {\n      return price.toString();\n    });\n    return prices;\n  };\n\n  console.log(enableFilters);\n  return /*#__PURE__*/_jsxDEV(StyledDiv, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      children: [/*#__PURE__*/_jsxDEV(StyledTitle, {\n        level: 2,\n        children: \"Property Finder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledSubtitle, {\n        level: 5,\n        type: \"secondary\",\n        children: \"A list of our available properties\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      checkedChildren: \"Filtered\",\n      unCheckedChildren: \"Filtered\",\n      defaultChecked: true,\n      onChange: () => {\n        setEnableFilters(!enableFilters);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResultTable, {\n      screening: screening,\n      units: units,\n      enableFilters: enableFilters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Results, \"IaYoqGXxcRbYggOJNZRJEf/zElU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Results;\nexport default Results;\n\nvar _c;\n\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"sources":["/Users/farzanhaq/Desktop/PropertyPal/src/components/Results/Results.tsx"],"names":["FilterOutlined","Divider","Table","Typography","message","Switch","FormContext","useContext","useEffect","useState","BathroomsKind","BedroomsKind","BudgetKind","useHistory","StyledSubtitle","StyledTitle","StyledDiv","API","graphqlOperation","listScreenings","listUnits","ResultTable","Column","Results","units","setUnits","screening","setScreening","enableFilters","setEnableFilters","enableRefresh","setEnableRefresh","formState","history","info","content","icon","duration","getUnits","getScreening","allUnits","graphql","data","items","err","console","log","screeningData","onFilterChange","onLoading","getDefaultNumBedrooms","numBedrooms","num_bedrooms","map","bedroom","BACHELOR","toString","ONE_BED","ONE_BED_PLUS_DEN","TWO_BED","TWO_BED_PLUS_DEN","getDefaultNumBathrooms","numBathrooms","num_bathrooms","bathroom","ONE_BATH","TWO_BATH","THREE_BATH","getDefaultPrice","prices","ZERO","ONE_MILLION","TWO_MILLION","THREE_MILLION","FOUR_MILLION","filter","price","budget"],"mappings":"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","sourcesContent":["import { FilterOutlined } from \"@ant-design/icons\";\nimport { Divider, Table, Typography, message, Spin, Switch } from \"antd\";\nimport { FormContext } from \"../../utils/FormState\";\nimport { useContext, useEffect, useState } from \"react\";\nimport {\n  BathroomsKind,\n  BedroomsKind,\n  BudgetKind,\n  OccupancyKind,\n  SqftKind,\n} from \"../../utils/enums\";\nimport { useHistory } from \"react-router-dom\";\nimport { StyledSubtitle, StyledTitle } from \"../Styles/Title.style\";\nimport { StyledDiv } from \"../Styles/Div.style\";\nimport API, { graphqlOperation } from \"@aws-amplify/api\";\nimport { listScreenings, listUnits } from \"../../graphql/queries\";\nimport ResultTable from \"./Result/ResultTable\";\n\nconst { Column } = Table;\ninterface Unit {\n  id: string;\n  unit_number: number;\n  price: string;\n  beds: number;\n  baths: number;\n  square_ft: number;\n  occupancy_date: number;\n}\n\ninterface Screening {\n  id: string;\n  user_email: string;\n  buyer_experience: string;\n  buyer_purpose: string;\n  num_bedrooms: number[];\n  num_bathrooms: number[];\n  premiums: string[];\n  budget: number[];\n}\n\nconst Results = () => {\n  const [units, setUnits] = useState<Unit[]>([]);\n  const [screening, setScreening] = useState<Screening>();\n  const [enableFilters, setEnableFilters] = useState(true);\n  const [enableRefresh, setEnableRefresh] = useState(true);\n  const { formState } = useContext(FormContext);\n  const history = useHistory();\n\n  useEffect(() => {\n    message.info({\n      content: \"Tip: Click on the filter icon to narrow your results\",\n      icon: <FilterOutlined />,\n      duration: 5,\n    });\n\n    getUnits();\n    getScreening();\n  }, []);\n\n  const getUnits = async () => {\n    try {\n      const allUnits: any = await API.graphql(graphqlOperation(listUnits));\n      setUnits(allUnits.data.listUnits.items);\n    } catch (err) {\n      console.log(\"error getting units: \" + err);\n    }\n  };\n\n  const getScreening = async () => {\n    try {\n      const screeningData: any = await API.graphql(\n        graphqlOperation(listScreenings)\n      );\n      setScreening(screeningData.data.listScreenings.items[0]);\n    } catch (err) {\n      console.log(\"error getting screening data: \" + err);\n    }\n  };\n\n  const onFilterChange = () => {\n    setEnableFilters(!enableFilters)\n    setEnableRefresh(true)\n  }\n\n  const onLoading = () => {\n    if (enableRefresh) {\n      return true\n    }\n\n    if (screening) {\n      return false\n    } else {\n      return true\n    }\n  }\n\n  const getDefaultNumBedrooms = () => {\n    const numBedrooms = screening?.num_bedrooms.map((bedroom: number) => {\n      switch (bedroom) {\n        case BedroomsKind.BACHELOR:\n          return BedroomsKind.BACHELOR.toString();\n        case BedroomsKind.ONE_BED:\n          return BedroomsKind.ONE_BED.toString();\n        case BedroomsKind.ONE_BED_PLUS_DEN:\n          return BedroomsKind.ONE_BED_PLUS_DEN.toString();\n        case BedroomsKind.TWO_BED:\n          return BedroomsKind.TWO_BED.toString();\n        case BedroomsKind.TWO_BED_PLUS_DEN:\n          return BedroomsKind.TWO_BED_PLUS_DEN.toString();\n        default:\n          return \"\";\n      }\n    });\n\n    return numBedrooms;\n  };\n\n  const getDefaultNumBathrooms = () => {\n    const numBathrooms = screening?.num_bathrooms.map((bathroom: number) => {\n      switch (bathroom) {\n        case BathroomsKind.ONE_BATH:\n          return BathroomsKind.ONE_BATH.toString();\n        case BathroomsKind.TWO_BATH:\n          return BathroomsKind.TWO_BATH.toString();\n        case BathroomsKind.THREE_BATH:\n          return BathroomsKind.THREE_BATH.toString();\n        default:\n          return \"\";\n      }\n    });\n\n    return numBathrooms;\n  };\n\n  const getDefaultPrice = () => {\n    const prices = [\n      BudgetKind.ZERO,\n      BudgetKind.ONE_MILLION,\n      BudgetKind.TWO_MILLION,\n      BudgetKind.THREE_MILLION,\n      BudgetKind.FOUR_MILLION,\n    ]\n      .filter((price) => {\n        return price >= formState.budget[0] && price < formState.budget[1];\n      })\n      .map((price) => {\n        return price.toString();\n      });\n\n    return prices;\n  };\n\n  console.log(enableFilters);\n\n  return (\n    <StyledDiv>\n      <Typography>\n        <StyledTitle level={2}>Property Finder</StyledTitle>\n        <StyledSubtitle level={5} type=\"secondary\">\n          A list of our available properties\n        </StyledSubtitle>\n      </Typography>\n      <Divider />\n      <Switch\n        checkedChildren=\"Filtered\"\n        unCheckedChildren=\"Filtered\"\n        defaultChecked\n        onChange={() => {\n          setEnableFilters(!enableFilters)\n        }}\n      />\n      <ResultTable screening={screening} units={units} enableFilters={enableFilters}/>\n    </StyledDiv>\n  );\n};\n\nexport default Results;\n"]},"metadata":{},"sourceType":"module"}