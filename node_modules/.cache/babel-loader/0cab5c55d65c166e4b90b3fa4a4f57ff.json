{"ast":null,"code":"var _jsxFileName = \"/Users/farzanhaq/Desktop/PropertyPal/src/components/Screening/Budget/Budget.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { LeftOutlined, RightOutlined } from \"@ant-design/icons\";\nimport { Typography, Slider, Button, Space } from \"antd\";\nimport { FormContext, FormStatusContext } from \"../../../utils/FormState\";\nimport { FormActionKind, BudgetKind } from \"../../../utils/enums\";\nimport { StyledPrompt } from \"../../Styles/Title.style\";\nimport { StyledButtonNavDiv } from \"../../Styles/Div.style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst marks = {\n  [BudgetKind.ZERO]: \"$0\",\n  [BudgetKind.ONE_MILLION]: \"$1M\",\n  [BudgetKind.TWO_MILLION]: \"$2M\",\n  [BudgetKind.THREE_MILLION]: \"$3M\",\n  [BudgetKind.FOUR_MILLION]: \"$4M\"\n};\n\nconst Budget = () => {\n  _s();\n\n  const {\n    formState,\n    formDispatch\n  } = useContext(FormContext);\n  const {\n    currentStep,\n    setCurrentStep\n  } = useContext(FormStatusContext);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      children: /*#__PURE__*/_jsxDEV(StyledPrompt, {\n        level: 5,\n        children: \"My budget is between...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Slider, {\n        range: true,\n        defaultValue: formState.budget,\n        onChange: value => formDispatch({\n          type: FormActionKind.ADD_BUDGET,\n          payload: value\n        }),\n        max: BudgetKind.FOUR_MILLION,\n        step: null,\n        marks: marks,\n        tipFormatter: value => `$${value}`.replace(new RegExp(/\\B(?=(\\d{3})+(?!\\d))/g), \",\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledButtonNavDiv, {\n      children: /*#__PURE__*/_jsxDEV(Space, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          shape: \"circle\",\n          size: \"large\",\n          icon: /*#__PURE__*/_jsxDEV(LeftOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 19\n          }, this),\n          onClick: () => setCurrentStep(currentStep - 1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          shape: \"circle\",\n          size: \"large\",\n          icon: /*#__PURE__*/_jsxDEV(RightOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 19\n          }, this),\n          onClick: () => {\n            setCurrentStep(currentStep + 1);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Budget, \"mHn29202P30v4j3cclPkQU8OPmQ=\");\n\n_c = Budget;\nexport default Budget;\n\nvar _c;\n\n$RefreshReg$(_c, \"Budget\");","map":{"version":3,"sources":["/Users/farzanhaq/Desktop/PropertyPal/src/components/Screening/Budget/Budget.tsx"],"names":["useContext","LeftOutlined","RightOutlined","Typography","Slider","Button","Space","FormContext","FormStatusContext","FormActionKind","BudgetKind","StyledPrompt","StyledButtonNavDiv","marks","ZERO","ONE_MILLION","TWO_MILLION","THREE_MILLION","FOUR_MILLION","Budget","formState","formDispatch","currentStep","setCurrentStep","budget","value","type","ADD_BUDGET","payload","replace","RegExp"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,mBAA5C;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,MAA7B,EAAqCC,KAArC,QAAkD,MAAlD;AACA,SAASC,WAAT,EAAsBC,iBAAtB,QAA+C,0BAA/C;AACA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,sBAA3C;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,kBAAT,QAAqD,wBAArD;;;AAEA,MAAMC,KAAK,GAAG;AACZ,GAACH,UAAU,CAACI,IAAZ,GAAmB,IADP;AAEZ,GAACJ,UAAU,CAACK,WAAZ,GAA0B,KAFd;AAGZ,GAACL,UAAU,CAACM,WAAZ,GAA0B,KAHd;AAIZ,GAACN,UAAU,CAACO,aAAZ,GAA4B,KAJhB;AAKZ,GAACP,UAAU,CAACQ,YAAZ,GAA2B;AALf,CAAd;;AAQA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA8BrB,UAAU,CAACO,WAAD,CAA9C;AACA,QAAM;AAAEe,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAkCvB,UAAU,CAACQ,iBAAD,CAAlD;AAEA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAA,6BACE,QAAC,YAAD;AAAc,QAAA,KAAK,EAAE,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,YAAY,EAAEY,SAAS,CAACI,MAF1B;AAGE,QAAA,QAAQ,EAAGC,KAAD,IACRJ,YAAY,CAAC;AAAEK,UAAAA,IAAI,EAAEjB,cAAc,CAACkB,UAAvB;AAAmCC,UAAAA,OAAO,EAAEH;AAA5C,SAAD,CAJhB;AAME,QAAA,GAAG,EAAEf,UAAU,CAACQ,YANlB;AAOE,QAAA,IAAI,EAAE,IAPR;AAQE,QAAA,KAAK,EAAEL,KART;AASE,QAAA,YAAY,EAAGY,KAAD,IACX,IAAGA,KAAM,EAAV,CAAYI,OAAZ,CAAoB,IAAIC,MAAJ,CAAW,uBAAX,CAApB,EAAyD,GAAzD;AAVJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF,eAqBE;AAAA;AAAA;AAAA;AAAA,YArBF,eAsBE;AAAA;AAAA;AAAA;AAAA,YAtBF,eAuBE,QAAC,kBAAD;AAAA,6BACE,QAAC,KAAD;AAAA,gCACE,QAAC,MAAD;AACE,UAAA,IAAI,EAAC,SADP;AAEE,UAAA,KAAK,EAAC,QAFR;AAGE,UAAA,IAAI,EAAC,OAHP;AAIE,UAAA,IAAI,eAAE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,kBAJR;AAKE,UAAA,OAAO,EAAE,MAAMP,cAAc,CAACD,WAAW,GAAG,CAAf;AAL/B;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,MAAD;AACE,UAAA,IAAI,EAAC,SADP;AAEE,UAAA,KAAK,EAAC,QAFR;AAGE,UAAA,IAAI,EAAC,OAHP;AAIE,UAAA,IAAI,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,kBAJR;AAKE,UAAA,OAAO,EAAE,MAAM;AACbC,YAAAA,cAAc,CAACD,WAAW,GAAG,CAAf,CAAd;AACD;AAPH;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA,kBADF;AA8CD,CAlDD;;GAAMH,M;;KAAAA,M;AAoDN,eAAeA,MAAf","sourcesContent":["import { useContext } from \"react\";\nimport { LeftOutlined, RightOutlined } from \"@ant-design/icons\";\nimport { Typography, Slider, Button, Space } from \"antd\";\nimport { FormContext, FormStatusContext } from \"../../../utils/FormState\";\nimport { FormActionKind, BudgetKind } from \"../../../utils/enums\";\nimport { StyledPrompt } from \"../../Styles/Title.style\";\nimport { StyledButtonNavDiv, StyledContentDiv } from \"../../Styles/Div.style\";\n\nconst marks = {\n  [BudgetKind.ZERO]: \"$0\",\n  [BudgetKind.ONE_MILLION]: \"$1M\",\n  [BudgetKind.TWO_MILLION]: \"$2M\",\n  [BudgetKind.THREE_MILLION]: \"$3M\",\n  [BudgetKind.FOUR_MILLION]: \"$4M\",\n};\n\nconst Budget = () => {\n  const { formState, formDispatch } = useContext(FormContext);\n  const { currentStep, setCurrentStep } = useContext(FormStatusContext);\n\n  return (\n    <>\n      <Typography>\n        <StyledPrompt level={5}>\n          My budget is between...\n        </StyledPrompt>\n      </Typography>\n      <div>\n        <Slider\n          range\n          defaultValue={formState.budget}\n          onChange={(value) =>\n            formDispatch({ type: FormActionKind.ADD_BUDGET, payload: value })\n          }\n          max={BudgetKind.FOUR_MILLION}\n          step={null}\n          marks={marks}\n          tipFormatter={(value) =>\n            `$${value}`.replace(new RegExp(/\\B(?=(\\d{3})+(?!\\d))/g), \",\")\n          }\n        />\n      </div>\n      <br />\n      <br />\n      <StyledButtonNavDiv>\n        <Space>\n          <Button\n            type=\"primary\"\n            shape=\"circle\"\n            size=\"large\"\n            icon={<LeftOutlined />}\n            onClick={() => setCurrentStep(currentStep - 1)}\n          />\n          <Button\n            type=\"primary\"\n            shape=\"circle\"\n            size=\"large\"\n            icon={<RightOutlined />}\n            onClick={() => {\n              setCurrentStep(currentStep + 1);\n            }}\n          />\n        </Space>\n      </StyledButtonNavDiv>\n    </>\n  );\n};\n\nexport default Budget;\n"]},"metadata":{},"sourceType":"module"}