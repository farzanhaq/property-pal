{"ast":null,"code":"var _jsxFileName = \"/Users/farzanhaq/Desktop/PropertyPal/src/components/Authentication/Reset/Reset.tsx\",\n    _s = $RefreshSig$();\n\nimport { LockOutlined } from \"@ant-design/icons\";\nimport { Button, Divider, Form, Input, message, Typography } from \"antd\";\nimport { Auth } from \"aws-amplify\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { StyledContentDiv, StyledDiv } from \"../../Styles/Div.style\";\nimport { StyledAuthenticationForm } from \"../../Styles/Form.style\";\nimport { StyledTitle } from \"../../Styles/Title.style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Item\n} = Form;\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 8\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 16,\n      offset: 8\n    }\n  }\n};\n\nconst Reset = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [isEmailSent, setIsEmailSent] = useState(false);\n  const [form] = Form.useForm();\n  const history = useHistory();\n\n  const onReset = async values => {\n    if (isEmailSent) {\n      try {\n        await Auth.forgotPasswordSubmit(email, values.code, values.password);\n        history.push(\"/login\");\n      } catch (err) {\n        message.error(\"The verification code you have entered is incorrect\");\n        console.log(\"error verifying code: \" + err);\n      }\n    } else {\n      try {\n        await Auth.forgotPassword(values.email);\n        message.info(\"Please find the verification code sent to your email\");\n        setEmail(values.email);\n        setIsEmailSent(true);\n      } catch (err) {\n        message.error(\"There was an error sending the verification code to your email\");\n        console.log(\"error sending verification code: \" + err);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledDiv, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      children: /*#__PURE__*/_jsxDEV(StyledTitle, {\n        level: 2,\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledContentDiv, {\n      children: isEmailSent ? /*#__PURE__*/_jsxDEV(StyledAuthenticationForm, { ...formItemLayout,\n        form: form,\n        name: \"register\",\n        onFinish: onReset,\n        scrollToFirstError: true,\n        children: [/*#__PURE__*/_jsxDEV(Item, {\n          name: \"code\",\n          label: \"Verification Code\",\n          rules: [{\n            required: true,\n            message: \"Please enter your verification code\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Item, {\n          name: \"password\",\n          label: \"New Password\",\n          rules: [{\n            required: true,\n            message: \"Please enter your new password\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 30\n            }, this),\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Item, { ...tailFormItemLayout,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(StyledAuthenticationForm, { ...formItemLayout,\n        form: form,\n        name: \"register\",\n        onFinish: onReset,\n        scrollToFirstError: true,\n        children: [/*#__PURE__*/_jsxDEV(Item, {\n          name: \"email\",\n          label: \"E-mail\",\n          rules: [{\n            type: \"email\",\n            message: \"The input is not a valid email!\"\n          }, {\n            required: true,\n            message: \"Please enter your email\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Item, { ...tailFormItemLayout,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Reset, \"6YSyw3o84v/NBa5V0jq68ZG+M/k=\", false, function () {\n  return [Form.useForm, useHistory];\n});\n\n_c = Reset;\nexport default Reset;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reset\");","map":{"version":3,"sources":["/Users/farzanhaq/Desktop/PropertyPal/src/components/Authentication/Reset/Reset.tsx"],"names":["LockOutlined","Button","Divider","Form","Input","message","Typography","Auth","useState","useHistory","StyledContentDiv","StyledDiv","StyledAuthenticationForm","StyledTitle","Item","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","Reset","email","setEmail","isEmailSent","setIsEmailSent","form","useForm","history","onReset","values","forgotPasswordSubmit","code","password","push","err","error","console","log","forgotPassword","info","required","type"],"mappings":"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","sourcesContent":["import { LockOutlined } from \"@ant-design/icons\";\nimport { Button, Divider, Form, Input, message, Typography } from \"antd\";\nimport { Auth } from \"aws-amplify\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { StyledContentDiv, StyledDiv } from \"../../Styles/Div.style\";\nimport { StyledAuthenticationForm } from \"../../Styles/Form.style\";\nimport { StyledTitle } from \"../../Styles/Title.style\";\n\nconst { Item } = Form;\n\nconst formItemLayout: {\n  labelCol: {\n    xs: {\n      span: number;\n    };\n    sm: {\n      span: number;\n    };\n  };\n  wrapperCol: {\n    xs: {\n      span: number;\n    };\n    sm: {\n      span: number;\n    };\n  };\n} = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\n\nconst tailFormItemLayout: {\n  wrapperCol: {\n    xs: {\n      span: number;\n      offset: number;\n    };\n    sm: {\n      span: number;\n      offset: number;\n    };\n  };\n} = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nconst Reset = () => {  \n  const [email, setEmail] = useState<string>(\"\");\n  const [isEmailSent, setIsEmailSent] = useState<boolean>(false);\n  const [form] = Form.useForm();\n  const history = useHistory();\n\n  const onReset = async (values: any) => {\n    if (isEmailSent) {\n      try {\n        await Auth.forgotPasswordSubmit(email, values.code, values.password);\n        history.push(\"/login\");\n      } catch (err) {\n        message.error(\"The verification code you have entered is incorrect\");\n        console.log(\"error verifying code: \" + err);\n      }\n    } else {\n      try {\n        await Auth.forgotPassword(values.email);\n        message.info(\"Please find the verification code sent to your email\");\n        setEmail(values.email);\n        setIsEmailSent(true);\n      } catch (err) {\n        message.error(\n          \"There was an error sending the verification code to your email\"\n        );\n        console.log(\"error sending verification code: \" + err);\n      }\n    }\n  };\n\n  return (\n    <StyledDiv>\n      <Typography>\n        <StyledTitle level={2}>Reset Password</StyledTitle>\n      </Typography>\n      <Divider />\n      <StyledContentDiv>\n        {isEmailSent ? (\n          <StyledAuthenticationForm\n            {...formItemLayout}\n            form={form}\n            name=\"register\"\n            onFinish={onReset}\n            scrollToFirstError\n          >\n            <Item\n              name=\"code\"\n              label=\"Verification Code\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please enter your verification code\",\n                },\n              ]}\n            >\n              <Input />\n            </Item>\n            <Item\n              name=\"password\"\n              label=\"New Password\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please enter your new password\",\n                },\n              ]}\n            >\n              <Input prefix={<LockOutlined />} type=\"password\" />\n            </Item>\n            <Item {...tailFormItemLayout}>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Confirm\n              </Button>\n            </Item>\n          </StyledAuthenticationForm>\n        ) : (\n          <StyledAuthenticationForm\n            {...formItemLayout}\n            form={form}\n            name=\"register\"\n            onFinish={onReset}\n            scrollToFirstError\n          >\n            <Item\n              name=\"email\"\n              label=\"E-mail\"\n              rules={[\n                {\n                  type: \"email\",\n                  message: \"The input is not a valid email!\",\n                },\n                {\n                  required: true,\n                  message: \"Please enter your email\",\n                },\n              ]}\n            >\n              <Input />\n            </Item>\n            <Item {...tailFormItemLayout}>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Confirm\n              </Button>\n            </Item>\n          </StyledAuthenticationForm>\n        )}\n      </StyledContentDiv>\n    </StyledDiv>\n  );\n};\n\nexport default Reset;\n"]},"metadata":{},"sourceType":"module"}